{"/home/travis/build/npmtest/node-npmtest-geolib/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-geolib/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":2,"38":2,"39":1,"40":2,"41":2,"42":1,"43":2,"44":2,"45":1,"46":2,"47":2,"48":1,"49":1,"50":1,"51":1,"52":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1,1],"10":[1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":2,"9":2,"10":2,"11":2,"12":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":83},"end":{"line":105,"column":10}},"skip":true},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":77},"end":{"line":116,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":12},"end":{"line":129,"column":40}},"skip":true},"9":{"name":"(anonymous_9)","line":137,"loc":{"start":{"line":137,"column":77},"end":{"line":140,"column":10}},"skip":true},"10":{"name":"(anonymous_10)","line":148,"loc":{"start":{"line":148,"column":83},"end":{"line":151,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":159,"loc":{"start":{"line":159,"column":79},"end":{"line":162,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":170,"loc":{"start":{"line":170,"column":75},"end":{"line":173,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":185,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":184,"column":5}},"24":{"start":{"line":92,"column":8},"end":{"line":94,"column":63}},"25":{"start":{"line":95,"column":8},"end":{"line":95,"column":14}},"26":{"start":{"line":102,"column":8},"end":{"line":111,"column":10},"skip":true},"27":{"start":{"line":109,"column":12},"end":{"line":109,"column":55},"skip":true},"28":{"start":{"line":110,"column":12},"end":{"line":110,"column":48},"skip":true},"29":{"start":{"line":113,"column":8},"end":{"line":126,"column":10},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":76},"skip":true},"31":{"start":{"line":121,"column":12},"end":{"line":121,"column":73},"skip":true},"32":{"start":{"line":122,"column":12},"end":{"line":122,"column":74},"skip":true},"33":{"start":{"line":123,"column":12},"end":{"line":123,"column":79},"skip":true},"34":{"start":{"line":124,"column":12},"end":{"line":124,"column":25},"skip":true},"35":{"start":{"line":125,"column":12},"end":{"line":125,"column":45},"skip":true},"36":{"start":{"line":128,"column":8},"end":{"line":135,"column":14},"skip":true},"37":{"start":{"line":133,"column":16},"end":{"line":133,"column":29},"skip":true},"38":{"start":{"line":134,"column":16},"end":{"line":134,"column":55},"skip":true},"39":{"start":{"line":137,"column":8},"end":{"line":146,"column":10},"skip":true},"40":{"start":{"line":144,"column":12},"end":{"line":144,"column":25},"skip":true},"41":{"start":{"line":145,"column":12},"end":{"line":145,"column":45},"skip":true},"42":{"start":{"line":148,"column":8},"end":{"line":157,"column":10},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":25},"skip":true},"44":{"start":{"line":156,"column":12},"end":{"line":156,"column":48},"skip":true},"45":{"start":{"line":159,"column":8},"end":{"line":168,"column":10},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":25},"skip":true},"47":{"start":{"line":167,"column":12},"end":{"line":167,"column":46},"skip":true},"48":{"start":{"line":170,"column":8},"end":{"line":179,"column":10},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":94},"skip":true},"50":{"start":{"line":178,"column":12},"end":{"line":178,"column":48},"skip":true},"51":{"start":{"line":182,"column":8},"end":{"line":182,"column":35},"skip":true},"52":{"start":{"line":183,"column":8},"end":{"line":183,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":95,"column":14}},{"start":{"line":101,"column":4},"end":{"line":183,"column":14},"skip":true}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":18},"end":{"line":92,"column":32}},{"start":{"line":93,"column":12},"end":{"line":93,"column":53}},{"start":{"line":94,"column":12},"end":{"line":94,"column":61}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":45},"end":{"line":102,"column":79},"skip":true},{"start":{"line":102,"column":83},"end":{"line":111,"column":9},"skip":true}]},"11":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":42},"end":{"line":113,"column":73},"skip":true},{"start":{"line":113,"column":77},"end":{"line":126,"column":9},"skip":true}]},"12":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":48},"end":{"line":128,"column":85},"skip":true},{"start":{"line":129,"column":12},"end":{"line":135,"column":13},"skip":true}]},"13":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":42},"end":{"line":137,"column":73},"skip":true},{"start":{"line":137,"column":77},"end":{"line":146,"column":9},"skip":true}]},"14":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":45},"end":{"line":148,"column":79},"skip":true},{"start":{"line":148,"column":83},"end":{"line":157,"column":9},"skip":true}]},"15":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":43},"end":{"line":159,"column":75},"skip":true},{"start":{"line":159,"column":79},"end":{"line":168,"column":9},"skip":true}]},"16":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":41},"end":{"line":170,"column":71},"skip":true},{"start":{"line":170,"column":75},"end":{"line":179,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_geolib */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"92":1,"95":1,"102":1,"109":1,"110":1,"113":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"128":1,"133":2,"134":2,"137":1,"144":2,"145":2,"148":1,"155":2,"156":2,"159":1,"166":2,"167":2,"170":1,"177":1,"178":1,"182":1,"183":1}},"/home/travis/build/npmtest/node-npmtest-geolib/lib.npmtest_geolib.js":{"path":"/home/travis/build/npmtest/node-npmtest-geolib/lib.npmtest_geolib.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":51}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":57}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_geolib */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_geolib = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_geolib = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-geolib/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-geolib/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":0,"42":2,"43":2,"44":2,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,2],"16":[2,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":314,"loc":{"start":{"line":314,"column":32},"end":{"line":314,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":325,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":324,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":294,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":302,"column":8},"end":{"line":302,"column":82},"skip":true},"70":{"start":{"line":305,"column":8},"end":{"line":307,"column":9},"skip":true},"71":{"start":{"line":306,"column":12},"end":{"line":306,"column":82},"skip":true},"72":{"start":{"line":309,"column":8},"end":{"line":311,"column":9},"skip":true},"73":{"start":{"line":310,"column":12},"end":{"line":310,"column":18},"skip":true},"74":{"start":{"line":312,"column":8},"end":{"line":312,"column":54},"skip":true},"75":{"start":{"line":313,"column":8},"end":{"line":313,"column":69},"skip":true},"76":{"start":{"line":314,"column":8},"end":{"line":322,"column":36},"skip":true},"77":{"start":{"line":315,"column":12},"end":{"line":315,"column":61},"skip":true},"78":{"start":{"line":316,"column":12},"end":{"line":319,"column":13},"skip":true},"79":{"start":{"line":317,"column":16},"end":{"line":317,"column":75},"skip":true},"80":{"start":{"line":318,"column":16},"end":{"line":318,"column":23},"skip":true},"81":{"start":{"line":320,"column":12},"end":{"line":320,"column":38},"skip":true},"82":{"start":{"line":321,"column":12},"end":{"line":321,"column":27},"skip":true},"83":{"start":{"line":323,"column":8},"end":{"line":323,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":50}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":323,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":64},"skip":true},{"start":{"line":296,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":43},"end":{"line":302,"column":75},"skip":true},{"start":{"line":302,"column":79},"end":{"line":302,"column":81},"skip":true}]},"25":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true},{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true}]},"26":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true},{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true}]},"27":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":27},"end":{"line":312,"column":43},"skip":true},{"start":{"line":312,"column":47},"end":{"line":312,"column":53},"skip":true}]},"28":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true},{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-geolib && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_geolib */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_geolib","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_geolib.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        local.assetsDict['/assets.npmtest_geolib.rollup.js'] =","            local.assetsDict['/assets.npmtest_geolib.rollup.js'] ||","            local.fs.readFileSync(","                // buildCustomOrg-hack","                local.npmtest_geolib.__dirname +","                    '/lib.npmtest_geolib.js',","                'utf8'","            ).replace((/^#!/), '//');","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":2,"127":2,"128":2,"129":2,"130":1,"133":2,"134":2,"139":2,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"294":1,"302":1,"305":1,"306":1,"309":1,"310":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"320":1,"321":1,"323":1}},"/home/travis/build/npmtest/node-npmtest-geolib/node_modules/geolib/dist/geolib.js":{"path":"/home/travis/build/npmtest/node-npmtest-geolib/node_modules/geolib/dist/geolib.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":44,"10":44,"11":41,"12":3,"13":1,"14":1,"15":0,"16":1,"17":1,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":1,"374":1,"375":1,"376":1,"377":0,"378":0,"379":0,"380":0},"b":{"1":[44,0],"2":[44,0],"3":[41,3],"4":[44,41],"5":[1,0],"6":[1,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0,0],"24":[0,0],"25":[0,0,0],"26":[0,0],"27":[0,0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0,0,0,0],"49":[0,0],"50":[0,0],"51":[0,0,0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[1,0],"93":[1,1],"94":[1,0],"95":[0,0],"96":[0,0]},"f":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":5},"end":{"line":10,"column":33}}},"2":{"name":"Geolib","line":14,"loc":{"start":{"line":14,"column":4},"end":{"line":14,"column":22}}},"3":{"name":"(anonymous_3)","line":62,"loc":{"start":{"line":62,"column":19},"end":{"line":62,"column":48}}},"4":{"name":"(anonymous_4)","line":77,"loc":{"start":{"line":77,"column":33},"end":{"line":77,"column":44}}},"5":{"name":"(anonymous_5)","line":83,"loc":{"start":{"line":83,"column":33},"end":{"line":83,"column":44}}},"6":{"name":"(anonymous_6)","line":97,"loc":{"start":{"line":97,"column":17},"end":{"line":97,"column":33}}},"7":{"name":"(anonymous_7)","line":110,"loc":{"start":{"line":110,"column":25},"end":{"line":110,"column":50}}},"8":{"name":"(anonymous_8)","line":114,"loc":{"start":{"line":114,"column":37},"end":{"line":114,"column":51}}},"9":{"name":"(anonymous_9)","line":119,"loc":{"start":{"line":119,"column":56},"end":{"line":119,"column":67}}},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":16},"end":{"line":147,"column":37}}},"11":{"name":"(anonymous_11)","line":152,"loc":{"start":{"line":152,"column":18},"end":{"line":152,"column":34}}},"12":{"name":"(anonymous_12)","line":158,"loc":{"start":{"line":158,"column":16},"end":{"line":158,"column":37}}},"13":{"name":"(anonymous_13)","line":163,"loc":{"start":{"line":163,"column":19},"end":{"line":163,"column":35}}},"14":{"name":"(anonymous_14)","line":167,"loc":{"start":{"line":167,"column":17},"end":{"line":167,"column":33}}},"15":{"name":"(anonymous_15)","line":172,"loc":{"start":{"line":172,"column":19},"end":{"line":172,"column":35}}},"16":{"name":"(anonymous_16)","line":176,"loc":{"start":{"line":176,"column":16},"end":{"line":176,"column":37}}},"17":{"name":"(anonymous_17)","line":194,"loc":{"start":{"line":194,"column":12},"end":{"line":194,"column":33}}},"18":{"name":"(anonymous_18)","line":200,"loc":{"start":{"line":200,"column":18},"end":{"line":200,"column":34}}},"19":{"name":"(anonymous_19)","line":242,"loc":{"start":{"line":242,"column":21},"end":{"line":242,"column":63}}},"20":{"name":"(anonymous_20)","line":389,"loc":{"start":{"line":389,"column":27},"end":{"line":389,"column":58}}},"21":{"name":"(anonymous_21)","line":425,"loc":{"start":{"line":425,"column":19},"end":{"line":425,"column":36}}},"22":{"name":"(anonymous_22)","line":449,"loc":{"start":{"line":449,"column":32},"end":{"line":449,"column":48}}},"23":{"name":"(anonymous_23)","line":487,"loc":{"start":{"line":487,"column":19},"end":{"line":487,"column":36}}},"24":{"name":"(anonymous_24)","line":539,"loc":{"start":{"line":539,"column":27},"end":{"line":539,"column":44}}},"25":{"name":"(anonymous_25)","line":559,"loc":{"start":{"line":559,"column":29},"end":{"line":559,"column":55}}},"26":{"name":"(anonymous_26)","line":626,"loc":{"start":{"line":626,"column":23},"end":{"line":626,"column":48}}},"27":{"name":"(anonymous_27)","line":658,"loc":{"start":{"line":658,"column":49},"end":{"line":658,"column":66}}},"28":{"name":"(anonymous_28)","line":705,"loc":{"start":{"line":705,"column":42},"end":{"line":705,"column":66}}},"29":{"name":"(anonymous_29)","line":732,"loc":{"start":{"line":732,"column":18},"end":{"line":732,"column":29}}},"30":{"name":"(anonymous_30)","line":745,"loc":{"start":{"line":745,"column":25},"end":{"line":745,"column":58}}},"31":{"name":"(anonymous_31)","line":753,"loc":{"start":{"line":753,"column":22},"end":{"line":753,"column":33}}},"32":{"name":"(anonymous_32)","line":771,"loc":{"start":{"line":771,"column":29},"end":{"line":771,"column":56}}},"33":{"name":"(anonymous_33)","line":809,"loc":{"start":{"line":809,"column":20},"end":{"line":809,"column":47}}},"34":{"name":"(anonymous_34)","line":858,"loc":{"start":{"line":858,"column":29},"end":{"line":858,"column":69}}},"35":{"name":"(anonymous_35)","line":930,"loc":{"start":{"line":930,"column":22},"end":{"line":930,"column":62}}},"36":{"name":"(anonymous_36)","line":942,"loc":{"start":{"line":942,"column":25},"end":{"line":942,"column":50}}},"37":{"name":"(anonymous_37)","line":957,"loc":{"start":{"line":957,"column":36},"end":{"line":957,"column":51}}},"38":{"name":"(anonymous_38)","line":971,"loc":{"start":{"line":971,"column":23},"end":{"line":971,"column":51}}},"39":{"name":"(anonymous_39)","line":985,"loc":{"start":{"line":985,"column":25},"end":{"line":985,"column":63}}},"40":{"name":"(anonymous_40)","line":997,"loc":{"start":{"line":997,"column":29},"end":{"line":997,"column":57}}},"41":{"name":"(anonymous_41)","line":1033,"loc":{"start":{"line":1033,"column":21},"end":{"line":1033,"column":61}}},"42":{"name":"(anonymous_42)","line":1054,"loc":{"start":{"line":1054,"column":23},"end":{"line":1054,"column":40}}},"43":{"name":"(anonymous_43)","line":1080,"loc":{"start":{"line":1080,"column":18},"end":{"line":1080,"column":48}}},"44":{"name":"(anonymous_44)","line":1112,"loc":{"start":{"line":1112,"column":33},"end":{"line":1112,"column":76}}},"45":{"name":"(anonymous_45)","line":1147,"loc":{"start":{"line":1147,"column":21},"end":{"line":1147,"column":53}}},"46":{"name":"(anonymous_46)","line":1183,"loc":{"start":{"line":1183,"column":20},"end":{"line":1183,"column":36}}},"47":{"name":"(anonymous_47)","line":1189,"loc":{"start":{"line":1189,"column":34},"end":{"line":1189,"column":48}}},"48":{"name":"(anonymous_48)","line":1261,"loc":{"start":{"line":1261,"column":29},"end":{"line":1261,"column":43}}},"49":{"name":"(anonymous_49)","line":1289,"loc":{"start":{"line":1289,"column":29},"end":{"line":1289,"column":51}}},"50":{"name":"(anonymous_50)","line":1324,"loc":{"start":{"line":1324,"column":19},"end":{"line":1324,"column":35}}},"51":{"name":"(anonymous_51)","line":1341,"loc":{"start":{"line":1341,"column":23},"end":{"line":1341,"column":39}}},"52":{"name":"(anonymous_52)","line":1349,"loc":{"start":{"line":1349,"column":15},"end":{"line":1349,"column":34}}},"53":{"name":"(anonymous_53)","line":1369,"loc":{"start":{"line":1369,"column":29},"end":{"line":1369,"column":41}}}},"statementMap":{"1":{"start":{"line":10,"column":4},"end":{"line":1380,"column":9}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":24}},"3":{"start":{"line":17,"column":4},"end":{"line":17,"column":34}},"4":{"start":{"line":18,"column":4},"end":{"line":18,"column":34}},"5":{"start":{"line":19,"column":4},"end":{"line":19,"column":31}},"6":{"start":{"line":20,"column":4},"end":{"line":20,"column":33}},"7":{"start":{"line":23,"column":4},"end":{"line":74,"column":7}},"8":{"start":{"line":63,"column":16},"end":{"line":71,"column":17}},"9":{"start":{"line":64,"column":20},"end":{"line":70,"column":21}},"10":{"start":{"line":65,"column":24},"end":{"line":69,"column":25}},"11":{"start":{"line":66,"column":28},"end":{"line":66,"column":80}},"12":{"start":{"line":68,"column":28},"end":{"line":68,"column":67}},"13":{"start":{"line":76,"column":4},"end":{"line":80,"column":5}},"14":{"start":{"line":77,"column":8},"end":{"line":79,"column":10}},"15":{"start":{"line":78,"column":12},"end":{"line":78,"column":40}},"16":{"start":{"line":82,"column":4},"end":{"line":86,"column":5}},"17":{"start":{"line":83,"column":8},"end":{"line":85,"column":10}},"18":{"start":{"line":84,"column":12},"end":{"line":84,"column":40}},"19":{"start":{"line":89,"column":4},"end":{"line":1354,"column":7}},"20":{"start":{"line":100,"column":12},"end":{"line":108,"column":13}},"21":{"start":{"line":102,"column":16},"end":{"line":106,"column":18}},"22":{"start":{"line":110,"column":12},"end":{"line":124,"column":14}},"23":{"start":{"line":112,"column":16},"end":{"line":112,"column":24}},"24":{"start":{"line":114,"column":16},"end":{"line":120,"column":19}},"25":{"start":{"line":116,"column":20},"end":{"line":118,"column":21}},"26":{"start":{"line":117,"column":24},"end":{"line":117,"column":36}},"27":{"start":{"line":119,"column":20},"end":{"line":119,"column":106}},"28":{"start":{"line":119,"column":69},"end":{"line":119,"column":79}},"29":{"start":{"line":119,"column":80},"end":{"line":119,"column":93}},"30":{"start":{"line":122,"column":16},"end":{"line":122,"column":27}},"31":{"start":{"line":126,"column":12},"end":{"line":126,"column":64}},"32":{"start":{"line":127,"column":12},"end":{"line":127,"column":55}},"33":{"start":{"line":128,"column":12},"end":{"line":128,"column":77}},"34":{"start":{"line":131,"column":12},"end":{"line":135,"column":13}},"35":{"start":{"line":134,"column":16},"end":{"line":134,"column":33}},"36":{"start":{"line":137,"column":12},"end":{"line":141,"column":14}},"37":{"start":{"line":148,"column":12},"end":{"line":148,"column":125}},"38":{"start":{"line":153,"column":12},"end":{"line":153,"column":49}},"39":{"start":{"line":159,"column":12},"end":{"line":159,"column":127}},"40":{"start":{"line":164,"column":12},"end":{"line":164,"column":49}},"41":{"start":{"line":168,"column":12},"end":{"line":168,"column":56}},"42":{"start":{"line":173,"column":12},"end":{"line":173,"column":50}},"43":{"start":{"line":178,"column":12},"end":{"line":181,"column":14}},"44":{"start":{"line":183,"column":12},"end":{"line":183,"column":60}},"45":{"start":{"line":185,"column":12},"end":{"line":187,"column":13}},"46":{"start":{"line":186,"column":16},"end":{"line":186,"column":43}},"47":{"start":{"line":189,"column":12},"end":{"line":189,"column":26}},"48":{"start":{"line":195,"column":12},"end":{"line":195,"column":54}},"49":{"start":{"line":202,"column":12},"end":{"line":202,"column":43}},"50":{"start":{"line":204,"column":12},"end":{"line":206,"column":13}},"51":{"start":{"line":205,"column":16},"end":{"line":205,"column":29}},"52":{"start":{"line":208,"column":12},"end":{"line":208,"column":43}},"53":{"start":{"line":209,"column":12},"end":{"line":209,"column":44}},"54":{"start":{"line":211,"column":12},"end":{"line":213,"column":13}},"55":{"start":{"line":212,"column":16},"end":{"line":212,"column":29}},"56":{"start":{"line":215,"column":12},"end":{"line":217,"column":13}},"57":{"start":{"line":216,"column":16},"end":{"line":216,"column":29}},"58":{"start":{"line":219,"column":12},"end":{"line":219,"column":39}},"59":{"start":{"line":220,"column":12},"end":{"line":220,"column":39}},"60":{"start":{"line":222,"column":12},"end":{"line":224,"column":13}},"61":{"start":{"line":223,"column":16},"end":{"line":223,"column":29}},"62":{"start":{"line":226,"column":12},"end":{"line":226,"column":24}},"63":{"start":{"line":244,"column":12},"end":{"line":244,"column":49}},"64":{"start":{"line":245,"column":12},"end":{"line":245,"column":51}},"65":{"start":{"line":247,"column":12},"end":{"line":247,"column":39}},"66":{"start":{"line":248,"column":12},"end":{"line":248,"column":37}},"67":{"start":{"line":250,"column":12},"end":{"line":250,"column":70}},"68":{"start":{"line":251,"column":12},"end":{"line":251,"column":60}},"69":{"start":{"line":253,"column":12},"end":{"line":253,"column":76}},"70":{"start":{"line":255,"column":12},"end":{"line":255,"column":84}},"71":{"start":{"line":256,"column":12},"end":{"line":256,"column":84}},"72":{"start":{"line":257,"column":12},"end":{"line":257,"column":59}},"73":{"start":{"line":258,"column":12},"end":{"line":258,"column":59}},"74":{"start":{"line":260,"column":12},"end":{"line":260,"column":53}},"75":{"start":{"line":261,"column":12},"end":{"line":309,"column":72}},"76":{"start":{"line":262,"column":16},"end":{"line":262,"column":79}},"77":{"start":{"line":263,"column":16},"end":{"line":275,"column":18}},"78":{"start":{"line":276,"column":16},"end":{"line":278,"column":17}},"79":{"start":{"line":277,"column":20},"end":{"line":277,"column":47}},"80":{"start":{"line":280,"column":16},"end":{"line":280,"column":69}},"81":{"start":{"line":281,"column":16},"end":{"line":281,"column":55}},"82":{"start":{"line":282,"column":16},"end":{"line":282,"column":64}},"83":{"start":{"line":283,"column":16},"end":{"line":283,"column":53}},"84":{"start":{"line":284,"column":16},"end":{"line":284,"column":71}},"85":{"start":{"line":286,"column":16},"end":{"line":288,"column":17}},"86":{"start":{"line":287,"column":20},"end":{"line":287,"column":35}},"87":{"start":{"line":289,"column":16},"end":{"line":295,"column":18}},"88":{"start":{"line":296,"column":16},"end":{"line":296,"column":33}},"89":{"start":{"line":297,"column":16},"end":{"line":307,"column":18}},"90":{"start":{"line":311,"column":12},"end":{"line":313,"column":13}},"91":{"start":{"line":312,"column":16},"end":{"line":312,"column":27}},"92":{"start":{"line":315,"column":12},"end":{"line":321,"column":14}},"93":{"start":{"line":323,"column":12},"end":{"line":331,"column":14}},"94":{"start":{"line":333,"column":12},"end":{"line":341,"column":14}},"95":{"start":{"line":343,"column":12},"end":{"line":355,"column":14}},"96":{"start":{"line":357,"column":12},"end":{"line":357,"column":56}},"97":{"start":{"line":359,"column":12},"end":{"line":359,"column":51}},"98":{"start":{"line":362,"column":12},"end":{"line":365,"column":13}},"99":{"start":{"line":363,"column":16},"end":{"line":363,"column":82}},"100":{"start":{"line":364,"column":16},"end":{"line":364,"column":74}},"101":{"start":{"line":367,"column":12},"end":{"line":367,"column":130}},"102":{"start":{"line":391,"column":12},"end":{"line":391,"column":49}},"103":{"start":{"line":393,"column":12},"end":{"line":412,"column":18}},"104":{"start":{"line":414,"column":12},"end":{"line":414,"column":88}},"105":{"start":{"line":427,"column":12},"end":{"line":427,"column":37}},"106":{"start":{"line":428,"column":12},"end":{"line":438,"column":13}},"107":{"start":{"line":430,"column":16},"end":{"line":430,"column":33}},"108":{"start":{"line":432,"column":16},"end":{"line":436,"column":17}},"109":{"start":{"line":433,"column":20},"end":{"line":435,"column":22}},"110":{"start":{"line":440,"column":12},"end":{"line":442,"column":13}},"111":{"start":{"line":441,"column":16},"end":{"line":441,"column":29}},"112":{"start":{"line":444,"column":12},"end":{"line":444,"column":24}},"113":{"start":{"line":445,"column":12},"end":{"line":445,"column":24}},"114":{"start":{"line":446,"column":12},"end":{"line":446,"column":24}},"115":{"start":{"line":447,"column":12},"end":{"line":447,"column":30}},"116":{"start":{"line":449,"column":12},"end":{"line":458,"column":21}},"117":{"start":{"line":451,"column":16},"end":{"line":451,"column":51}},"118":{"start":{"line":452,"column":16},"end":{"line":452,"column":52}},"119":{"start":{"line":454,"column":16},"end":{"line":454,"column":51}},"120":{"start":{"line":455,"column":16},"end":{"line":455,"column":51}},"121":{"start":{"line":456,"column":16},"end":{"line":456,"column":35}},"122":{"start":{"line":460,"column":12},"end":{"line":460,"column":47}},"123":{"start":{"line":461,"column":12},"end":{"line":461,"column":30}},"124":{"start":{"line":462,"column":12},"end":{"line":462,"column":30}},"125":{"start":{"line":463,"column":12},"end":{"line":463,"column":30}},"126":{"start":{"line":465,"column":12},"end":{"line":465,"column":35}},"127":{"start":{"line":466,"column":12},"end":{"line":466,"column":43}},"128":{"start":{"line":467,"column":12},"end":{"line":467,"column":37}},"129":{"start":{"line":469,"column":12},"end":{"line":472,"column":14}},"130":{"start":{"line":489,"column":12},"end":{"line":491,"column":13}},"131":{"start":{"line":490,"column":16},"end":{"line":490,"column":29}},"132":{"start":{"line":493,"column":12},"end":{"line":493,"column":57}},"133":{"start":{"line":495,"column":12},"end":{"line":500,"column":14}},"134":{"start":{"line":502,"column":12},"end":{"line":505,"column":13}},"135":{"start":{"line":503,"column":16},"end":{"line":503,"column":34}},"136":{"start":{"line":504,"column":16},"end":{"line":504,"column":41}},"137":{"start":{"line":507,"column":12},"end":{"line":519,"column":13}},"138":{"start":{"line":509,"column":16},"end":{"line":509,"column":80}},"139":{"start":{"line":510,"column":16},"end":{"line":510,"column":80}},"140":{"start":{"line":511,"column":16},"end":{"line":511,"column":81}},"141":{"start":{"line":512,"column":16},"end":{"line":512,"column":81}},"142":{"start":{"line":514,"column":16},"end":{"line":517,"column":17}},"143":{"start":{"line":515,"column":20},"end":{"line":515,"column":87}},"144":{"start":{"line":516,"column":20},"end":{"line":516,"column":87}},"145":{"start":{"line":521,"column":12},"end":{"line":521,"column":25}},"146":{"start":{"line":540,"column":12},"end":{"line":540,"column":43}},"147":{"start":{"line":541,"column":12},"end":{"line":541,"column":66}},"148":{"start":{"line":542,"column":12},"end":{"line":542,"column":67}},"149":{"start":{"line":543,"column":12},"end":{"line":546,"column":14}},"150":{"start":{"line":561,"column":12},"end":{"line":561,"column":48}},"151":{"start":{"line":562,"column":12},"end":{"line":562,"column":50}},"152":{"start":{"line":564,"column":12},"end":{"line":564,"column":42}},"153":{"start":{"line":565,"column":12},"end":{"line":565,"column":43}},"154":{"start":{"line":567,"column":12},"end":{"line":567,"column":49}},"155":{"start":{"line":568,"column":12},"end":{"line":568,"column":42}},"156":{"start":{"line":569,"column":12},"end":{"line":569,"column":42}},"157":{"start":{"line":571,"column":12},"end":{"line":571,"column":50}},"158":{"start":{"line":572,"column":12},"end":{"line":572,"column":50}},"159":{"start":{"line":573,"column":12},"end":{"line":573,"column":50}},"160":{"start":{"line":574,"column":12},"end":{"line":574,"column":50}},"161":{"start":{"line":576,"column":12},"end":{"line":576,"column":23}},"162":{"start":{"line":577,"column":12},"end":{"line":577,"column":23}},"163":{"start":{"line":579,"column":12},"end":{"line":600,"column":13}},"164":{"start":{"line":581,"column":16},"end":{"line":581,"column":79}},"165":{"start":{"line":582,"column":16},"end":{"line":582,"column":43}},"166":{"start":{"line":584,"column":16},"end":{"line":586,"column":17}},"167":{"start":{"line":585,"column":20},"end":{"line":585,"column":43}},"168":{"start":{"line":588,"column":16},"end":{"line":588,"column":43}},"169":{"start":{"line":590,"column":16},"end":{"line":592,"column":17}},"170":{"start":{"line":591,"column":20},"end":{"line":591,"column":43}},"171":{"start":{"line":596,"column":16},"end":{"line":596,"column":55}},"172":{"start":{"line":597,"column":16},"end":{"line":597,"column":55}},"173":{"start":{"line":598,"column":16},"end":{"line":598,"column":37}},"174":{"start":{"line":599,"column":16},"end":{"line":599,"column":37}},"175":{"start":{"line":602,"column":12},"end":{"line":613,"column":14}},"176":{"start":{"line":628,"column":12},"end":{"line":645,"column":13}},"177":{"start":{"line":630,"column":16},"end":{"line":643,"column":17}},"178":{"start":{"line":642,"column":20},"end":{"line":642,"column":27}},"179":{"start":{"line":647,"column":12},"end":{"line":647,"column":21}},"180":{"start":{"line":660,"column":12},"end":{"line":689,"column":13}},"181":{"start":{"line":662,"column":12},"end":{"line":685,"column":17}},"182":{"start":{"line":664,"column":20},"end":{"line":664,"column":66}},"183":{"start":{"line":665,"column":20},"end":{"line":665,"column":43}},"184":{"start":{"line":669,"column":20},"end":{"line":677,"column":22}},"185":{"start":{"line":679,"column":20},"end":{"line":683,"column":22}},"186":{"start":{"line":687,"column":16},"end":{"line":687,"column":20}},"187":{"start":{"line":707,"column":12},"end":{"line":709,"column":37}},"188":{"start":{"line":711,"column":12},"end":{"line":722,"column":13}},"189":{"start":{"line":713,"column":16},"end":{"line":718,"column":17}},"190":{"start":{"line":716,"column":20},"end":{"line":716,"column":82}},"191":{"start":{"line":720,"column":16},"end":{"line":720,"column":20}},"192":{"start":{"line":724,"column":12},"end":{"line":724,"column":34}},"193":{"start":{"line":733,"column":12},"end":{"line":733,"column":61}},"194":{"start":{"line":746,"column":12},"end":{"line":746,"column":61}},"195":{"start":{"line":754,"column":12},"end":{"line":754,"column":63}},"196":{"start":{"line":774,"column":12},"end":{"line":774,"column":92}},"197":{"start":{"line":777,"column":12},"end":{"line":784,"column":14}},"198":{"start":{"line":787,"column":12},"end":{"line":794,"column":13}},"199":{"start":{"line":788,"column":16},"end":{"line":793,"column":17}},"200":{"start":{"line":789,"column":20},"end":{"line":789,"column":60}},"201":{"start":{"line":792,"column":20},"end":{"line":792,"column":53}},"202":{"start":{"line":797,"column":12},"end":{"line":797,"column":70}},"203":{"start":{"line":811,"column":12},"end":{"line":811,"column":55}},"204":{"start":{"line":812,"column":12},"end":{"line":812,"column":57}},"205":{"start":{"line":813,"column":12},"end":{"line":813,"column":59}},"206":{"start":{"line":814,"column":12},"end":{"line":814,"column":61}},"207":{"start":{"line":816,"column":12},"end":{"line":843,"column":20}},"208":{"start":{"line":845,"column":12},"end":{"line":845,"column":27}},"209":{"start":{"line":860,"column":12},"end":{"line":860,"column":26}},"210":{"start":{"line":861,"column":12},"end":{"line":861,"column":24}},"211":{"start":{"line":863,"column":12},"end":{"line":869,"column":13}},"212":{"start":{"line":865,"column":16},"end":{"line":865,"column":60}},"213":{"start":{"line":868,"column":16},"end":{"line":868,"column":69}},"214":{"start":{"line":871,"column":12},"end":{"line":919,"column":13}},"215":{"start":{"line":873,"column":20},"end":{"line":873,"column":59}},"216":{"start":{"line":874,"column":20},"end":{"line":874,"column":26}},"217":{"start":{"line":876,"column":20},"end":{"line":876,"column":58}},"218":{"start":{"line":877,"column":20},"end":{"line":877,"column":26}},"219":{"start":{"line":879,"column":20},"end":{"line":879,"column":59}},"220":{"start":{"line":880,"column":20},"end":{"line":880,"column":26}},"221":{"start":{"line":882,"column":20},"end":{"line":882,"column":57}},"222":{"start":{"line":883,"column":20},"end":{"line":883,"column":26}},"223":{"start":{"line":885,"column":20},"end":{"line":885,"column":59}},"224":{"start":{"line":886,"column":20},"end":{"line":886,"column":26}},"225":{"start":{"line":888,"column":20},"end":{"line":888,"column":58}},"226":{"start":{"line":889,"column":20},"end":{"line":889,"column":26}},"227":{"start":{"line":891,"column":20},"end":{"line":891,"column":59}},"228":{"start":{"line":892,"column":20},"end":{"line":892,"column":26}},"229":{"start":{"line":894,"column":20},"end":{"line":894,"column":57}},"230":{"start":{"line":895,"column":20},"end":{"line":895,"column":26}},"231":{"start":{"line":897,"column":20},"end":{"line":897,"column":59}},"232":{"start":{"line":898,"column":20},"end":{"line":898,"column":26}},"233":{"start":{"line":900,"column":20},"end":{"line":900,"column":58}},"234":{"start":{"line":901,"column":20},"end":{"line":901,"column":26}},"235":{"start":{"line":903,"column":20},"end":{"line":903,"column":59}},"236":{"start":{"line":904,"column":20},"end":{"line":904,"column":26}},"237":{"start":{"line":906,"column":20},"end":{"line":906,"column":57}},"238":{"start":{"line":907,"column":20},"end":{"line":907,"column":26}},"239":{"start":{"line":909,"column":20},"end":{"line":909,"column":59}},"240":{"start":{"line":910,"column":20},"end":{"line":910,"column":26}},"241":{"start":{"line":912,"column":20},"end":{"line":912,"column":58}},"242":{"start":{"line":913,"column":20},"end":{"line":913,"column":26}},"243":{"start":{"line":915,"column":20},"end":{"line":915,"column":59}},"244":{"start":{"line":916,"column":20},"end":{"line":916,"column":26}},"245":{"start":{"line":918,"column":20},"end":{"line":918,"column":57}},"246":{"start":{"line":921,"column":12},"end":{"line":921,"column":43}},"247":{"start":{"line":922,"column":12},"end":{"line":922,"column":29}},"248":{"start":{"line":931,"column":12},"end":{"line":931,"column":67}},"249":{"start":{"line":944,"column":12},"end":{"line":944,"column":33}},"250":{"start":{"line":946,"column":12},"end":{"line":955,"column":13}},"251":{"start":{"line":948,"column":16},"end":{"line":948,"column":71}},"252":{"start":{"line":949,"column":16},"end":{"line":949,"column":66}},"253":{"start":{"line":950,"column":16},"end":{"line":950,"column":51}},"254":{"start":{"line":951,"column":16},"end":{"line":951,"column":43}},"255":{"start":{"line":953,"column":16},"end":{"line":953,"column":49}},"256":{"start":{"line":957,"column":12},"end":{"line":959,"column":15}},"257":{"start":{"line":958,"column":16},"end":{"line":958,"column":47}},"258":{"start":{"line":973,"column":12},"end":{"line":973,"column":140}},"259":{"start":{"line":986,"column":12},"end":{"line":986,"column":74}},"260":{"start":{"line":998,"column":12},"end":{"line":998,"column":58}},"261":{"start":{"line":999,"column":12},"end":{"line":999,"column":56}},"262":{"start":{"line":1000,"column":12},"end":{"line":1000,"column":56}},"263":{"start":{"line":1001,"column":12},"end":{"line":1001,"column":29}},"264":{"start":{"line":1004,"column":12},"end":{"line":1004,"column":69}},"265":{"start":{"line":1006,"column":12},"end":{"line":1006,"column":68}},"266":{"start":{"line":1010,"column":12},"end":{"line":1021,"column":13}},"267":{"start":{"line":1011,"column":16},"end":{"line":1011,"column":30}},"268":{"start":{"line":1014,"column":17},"end":{"line":1021,"column":13}},"269":{"start":{"line":1015,"column":16},"end":{"line":1015,"column":30}},"270":{"start":{"line":1020,"column":16},"end":{"line":1020,"column":48}},"271":{"start":{"line":1023,"column":12},"end":{"line":1023,"column":28}},"272":{"start":{"line":1035,"column":12},"end":{"line":1035,"column":33}},"273":{"start":{"line":1036,"column":12},"end":{"line":1036,"column":31}},"274":{"start":{"line":1037,"column":12},"end":{"line":1037,"column":63}},"275":{"start":{"line":1039,"column":12},"end":{"line":1043,"column":13}},"276":{"start":{"line":1040,"column":16},"end":{"line":1040,"column":39}},"277":{"start":{"line":1042,"column":16},"end":{"line":1042,"column":53}},"278":{"start":{"line":1056,"column":12},"end":{"line":1056,"column":25}},"279":{"start":{"line":1057,"column":12},"end":{"line":1057,"column":21}},"280":{"start":{"line":1059,"column":12},"end":{"line":1065,"column":13}},"281":{"start":{"line":1060,"column":16},"end":{"line":1063,"column":17}},"282":{"start":{"line":1062,"column":20},"end":{"line":1062,"column":75}},"283":{"start":{"line":1064,"column":16},"end":{"line":1064,"column":46}},"284":{"start":{"line":1067,"column":12},"end":{"line":1067,"column":24}},"285":{"start":{"line":1082,"column":12},"end":{"line":1082,"column":55}},"286":{"start":{"line":1084,"column":12},"end":{"line":1088,"column":13}},"287":{"start":{"line":1085,"column":16},"end":{"line":1085,"column":28}},"288":{"start":{"line":1086,"column":19},"end":{"line":1088,"column":13}},"289":{"start":{"line":1087,"column":16},"end":{"line":1087,"column":28}},"290":{"start":{"line":1090,"column":12},"end":{"line":1090,"column":58}},"291":{"start":{"line":1091,"column":12},"end":{"line":1091,"column":67}},"292":{"start":{"line":1092,"column":12},"end":{"line":1092,"column":46}},"293":{"start":{"line":1093,"column":12},"end":{"line":1093,"column":79}},"294":{"start":{"line":1094,"column":12},"end":{"line":1094,"column":25}},"295":{"start":{"line":1114,"column":12},"end":{"line":1114,"column":43}},"296":{"start":{"line":1115,"column":12},"end":{"line":1115,"column":44}},"297":{"start":{"line":1117,"column":12},"end":{"line":1117,"column":84}},"298":{"start":{"line":1119,"column":12},"end":{"line":1119,"column":46}},"299":{"start":{"line":1120,"column":12},"end":{"line":1120,"column":44}},"300":{"start":{"line":1122,"column":12},"end":{"line":1122,"column":41}},"301":{"start":{"line":1123,"column":12},"end":{"line":1123,"column":41}},"302":{"start":{"line":1125,"column":12},"end":{"line":1126,"column":55}},"303":{"start":{"line":1127,"column":12},"end":{"line":1128,"column":59}},"304":{"start":{"line":1129,"column":12},"end":{"line":1129,"column":56}},"305":{"start":{"line":1131,"column":12},"end":{"line":1134,"column":14}},"306":{"start":{"line":1149,"column":12},"end":{"line":1163,"column":13}},"307":{"start":{"line":1151,"column":16},"end":{"line":1151,"column":25}},"308":{"start":{"line":1153,"column":19},"end":{"line":1163,"column":13}},"309":{"start":{"line":1155,"column":16},"end":{"line":1161,"column":17}},"310":{"start":{"line":1156,"column":20},"end":{"line":1156,"column":61}},"311":{"start":{"line":1157,"column":23},"end":{"line":1161,"column":17}},"312":{"start":{"line":1158,"column":20},"end":{"line":1158,"column":29}},"313":{"start":{"line":1160,"column":20},"end":{"line":1160,"column":45}},"314":{"start":{"line":1165,"column":12},"end":{"line":1165,"column":31}},"315":{"start":{"line":1166,"column":12},"end":{"line":1166,"column":48}},"316":{"start":{"line":1168,"column":12},"end":{"line":1172,"column":13}},"317":{"start":{"line":1169,"column":16},"end":{"line":1169,"column":73}},"318":{"start":{"line":1171,"column":16},"end":{"line":1171,"column":64}},"319":{"start":{"line":1185,"column":12},"end":{"line":1238,"column":13}},"320":{"start":{"line":1187,"column":16},"end":{"line":1187,"column":34}},"321":{"start":{"line":1189,"column":16},"end":{"line":1222,"column":19}},"322":{"start":{"line":1192,"column":20},"end":{"line":1220,"column":21}},"323":{"start":{"line":1194,"column":24},"end":{"line":1194,"column":54}},"324":{"start":{"line":1196,"column":27},"end":{"line":1220,"column":21}},"325":{"start":{"line":1198,"column":24},"end":{"line":1210,"column":25}},"326":{"start":{"line":1200,"column":28},"end":{"line":1200,"column":54}},"327":{"start":{"line":1204,"column":28},"end":{"line":1206,"column":29}},"328":{"start":{"line":1205,"column":32},"end":{"line":1205,"column":73}},"329":{"start":{"line":1208,"column":28},"end":{"line":1208,"column":39}},"330":{"start":{"line":1212,"column":27},"end":{"line":1220,"column":21}},"331":{"start":{"line":1214,"column":24},"end":{"line":1214,"column":63}},"332":{"start":{"line":1218,"column":24},"end":{"line":1218,"column":35}},"333":{"start":{"line":1224,"column":16},"end":{"line":1224,"column":29}},"334":{"start":{"line":1226,"column":19},"end":{"line":1238,"column":13}},"335":{"start":{"line":1228,"column":16},"end":{"line":1228,"column":42}},"336":{"start":{"line":1230,"column":19},"end":{"line":1238,"column":13}},"337":{"start":{"line":1232,"column":16},"end":{"line":1234,"column":17}},"338":{"start":{"line":1233,"column":20},"end":{"line":1233,"column":63}},"339":{"start":{"line":1236,"column":16},"end":{"line":1236,"column":29}},"340":{"start":{"line":1241,"column":12},"end":{"line":1249,"column":13}},"341":{"start":{"line":1243,"column":16},"end":{"line":1243,"column":41}},"342":{"start":{"line":1245,"column":19},"end":{"line":1249,"column":13}},"343":{"start":{"line":1247,"column":16},"end":{"line":1247,"column":67}},"344":{"start":{"line":1251,"column":12},"end":{"line":1251,"column":47}},"345":{"start":{"line":1263,"column":12},"end":{"line":1265,"column":13}},"346":{"start":{"line":1264,"column":16},"end":{"line":1264,"column":45}},"347":{"start":{"line":1267,"column":12},"end":{"line":1267,"column":48}},"348":{"start":{"line":1269,"column":12},"end":{"line":1269,"column":39}},"349":{"start":{"line":1270,"column":12},"end":{"line":1270,"column":48}},"350":{"start":{"line":1271,"column":12},"end":{"line":1271,"column":48}},"351":{"start":{"line":1273,"column":12},"end":{"line":1273,"column":34}},"352":{"start":{"line":1274,"column":12},"end":{"line":1274,"column":59}},"353":{"start":{"line":1276,"column":12},"end":{"line":1276,"column":74}},"354":{"start":{"line":1278,"column":12},"end":{"line":1278,"column":41}},"355":{"start":{"line":1291,"column":12},"end":{"line":1293,"column":13}},"356":{"start":{"line":1292,"column":16},"end":{"line":1292,"column":49}},"357":{"start":{"line":1295,"column":12},"end":{"line":1295,"column":60}},"358":{"start":{"line":1296,"column":12},"end":{"line":1296,"column":47}},"359":{"start":{"line":1297,"column":12},"end":{"line":1297,"column":33}},"360":{"start":{"line":1299,"column":12},"end":{"line":1302,"column":13}},"361":{"start":{"line":1300,"column":16},"end":{"line":1300,"column":45}},"362":{"start":{"line":1301,"column":16},"end":{"line":1301,"column":52}},"363":{"start":{"line":1304,"column":12},"end":{"line":1304,"column":69}},"364":{"start":{"line":1308,"column":16},"end":{"line":1308,"column":94}},"365":{"start":{"line":1311,"column":12},"end":{"line":1311,"column":44}},"366":{"start":{"line":1313,"column":12},"end":{"line":1313,"column":23}},"367":{"start":{"line":1326,"column":12},"end":{"line":1326,"column":56}},"368":{"start":{"line":1330,"column":12},"end":{"line":1330,"column":77}},"369":{"start":{"line":1343,"column":12},"end":{"line":1343,"column":56}},"370":{"start":{"line":1345,"column":12},"end":{"line":1345,"column":55}},"371":{"start":{"line":1350,"column":12},"end":{"line":1350,"column":43}},"372":{"start":{"line":1351,"column":12},"end":{"line":1351,"column":57}},"373":{"start":{"line":1357,"column":4},"end":{"line":1378,"column":5}},"374":{"start":{"line":1359,"column":8},"end":{"line":1359,"column":32}},"375":{"start":{"line":1362,"column":8},"end":{"line":1364,"column":9}},"376":{"start":{"line":1363,"column":10},"end":{"line":1363,"column":33}},"377":{"start":{"line":1367,"column":11},"end":{"line":1378,"column":5}},"378":{"start":{"line":1369,"column":8},"end":{"line":1371,"column":11}},"379":{"start":{"line":1370,"column":12},"end":{"line":1370,"column":26}},"380":{"start":{"line":1376,"column":8},"end":{"line":1376,"column":31}}},"branchMap":{"1":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":20},"end":{"line":64,"column":20}},{"start":{"line":64,"column":20},"end":{"line":64,"column":20}}]},"2":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":23},"end":{"line":64,"column":68}},{"start":{"line":64,"column":72},"end":{"line":64,"column":90}}]},"3":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":24},"end":{"line":65,"column":24}},{"start":{"line":65,"column":24},"end":{"line":65,"column":24}}]},"4":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":27},"end":{"line":65,"column":62}},{"start":{"line":65,"column":66},"end":{"line":65,"column":106}}]},"5":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]},"6":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"7":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":12},"end":{"line":100,"column":12}},{"start":{"line":100,"column":12},"end":{"line":100,"column":12}}]},"8":{"line":103,"type":"cond-expr","locations":[{"start":{"line":103,"column":51},"end":{"line":103,"column":52}},{"start":{"line":103,"column":55},"end":{"line":103,"column":64}}]},"9":{"line":104,"type":"cond-expr","locations":[{"start":{"line":104,"column":50},"end":{"line":104,"column":51}},{"start":{"line":104,"column":54},"end":{"line":104,"column":63}}]},"10":{"line":105,"type":"cond-expr","locations":[{"start":{"line":105,"column":51},"end":{"line":105,"column":52}},{"start":{"line":105,"column":55},"end":{"line":105,"column":64}}]},"11":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":20},"end":{"line":116,"column":20}},{"start":{"line":116,"column":20},"end":{"line":116,"column":20}}]},"12":{"line":119,"type":"cond-expr","locations":[{"start":{"line":119,"column":56},"end":{"line":119,"column":97}},{"start":{"line":119,"column":101},"end":{"line":119,"column":105}}]},"13":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":12},"end":{"line":131,"column":12}},{"start":{"line":131,"column":12},"end":{"line":131,"column":12}}]},"14":{"line":131,"type":"binary-expr","locations":[{"start":{"line":131,"column":15},"end":{"line":131,"column":45}},{"start":{"line":132,"column":16},"end":{"line":132,"column":47}},{"start":{"line":133,"column":16},"end":{"line":133,"column":47}}]},"15":{"line":148,"type":"cond-expr","locations":[{"start":{"line":148,"column":34},"end":{"line":148,"column":69}},{"start":{"line":148,"column":72},"end":{"line":148,"column":124}}]},"16":{"line":159,"type":"cond-expr","locations":[{"start":{"line":159,"column":34},"end":{"line":159,"column":70}},{"start":{"line":159,"column":73},"end":{"line":159,"column":126}}]},"17":{"line":179,"type":"cond-expr","locations":[{"start":{"line":179,"column":41},"end":{"line":179,"column":76}},{"start":{"line":179,"column":79},"end":{"line":179,"column":131}}]},"18":{"line":180,"type":"cond-expr","locations":[{"start":{"line":180,"column":42},"end":{"line":180,"column":78}},{"start":{"line":180,"column":81},"end":{"line":180,"column":134}}]},"19":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":12},"end":{"line":185,"column":12}},{"start":{"line":185,"column":12},"end":{"line":185,"column":12}}]},"20":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":12},"end":{"line":204,"column":12}},{"start":{"line":204,"column":12},"end":{"line":204,"column":12}}]},"21":{"line":204,"type":"binary-expr","locations":[{"start":{"line":204,"column":15},"end":{"line":204,"column":42}},{"start":{"line":204,"column":46},"end":{"line":204,"column":82}},{"start":{"line":204,"column":86},"end":{"line":204,"column":116}}]},"22":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":12},"end":{"line":211,"column":12}},{"start":{"line":211,"column":12},"end":{"line":211,"column":12}}]},"23":{"line":211,"type":"binary-expr","locations":[{"start":{"line":211,"column":15},"end":{"line":211,"column":41}},{"start":{"line":211,"column":45},"end":{"line":211,"column":65}},{"start":{"line":211,"column":69},"end":{"line":211,"column":93}}]},"24":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":12},"end":{"line":215,"column":12}},{"start":{"line":215,"column":12},"end":{"line":215,"column":12}}]},"25":{"line":215,"type":"binary-expr","locations":[{"start":{"line":215,"column":15},"end":{"line":215,"column":41}},{"start":{"line":215,"column":45},"end":{"line":215,"column":65}},{"start":{"line":215,"column":69},"end":{"line":215,"column":93}}]},"26":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":12},"end":{"line":222,"column":12}},{"start":{"line":222,"column":12},"end":{"line":222,"column":12}}]},"27":{"line":222,"type":"binary-expr","locations":[{"start":{"line":222,"column":15},"end":{"line":222,"column":32}},{"start":{"line":222,"column":36},"end":{"line":222,"column":53}},{"start":{"line":222,"column":57},"end":{"line":222,"column":74}},{"start":{"line":222,"column":78},"end":{"line":222,"column":95}}]},"28":{"line":244,"type":"binary-expr","locations":[{"start":{"line":244,"column":23},"end":{"line":244,"column":43}},{"start":{"line":244,"column":47},"end":{"line":244,"column":48}}]},"29":{"line":245,"type":"binary-expr","locations":[{"start":{"line":245,"column":24},"end":{"line":245,"column":45}},{"start":{"line":245,"column":49},"end":{"line":245,"column":50}}]},"30":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":16},"end":{"line":276,"column":16}},{"start":{"line":276,"column":16},"end":{"line":276,"column":16}}]},"31":{"line":286,"type":"if","locations":[{"start":{"line":286,"column":16},"end":{"line":286,"column":16}},{"start":{"line":286,"column":16},"end":{"line":286,"column":16}}]},"32":{"line":309,"type":"binary-expr","locations":[{"start":{"line":309,"column":21},"end":{"line":309,"column":53}},{"start":{"line":309,"column":57},"end":{"line":309,"column":70}}]},"33":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":12},"end":{"line":311,"column":12}},{"start":{"line":311,"column":12},"end":{"line":311,"column":12}}]},"34":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":12},"end":{"line":362,"column":12}},{"start":{"line":362,"column":12},"end":{"line":362,"column":12}}]},"35":{"line":362,"type":"binary-expr","locations":[{"start":{"line":362,"column":16},"end":{"line":362,"column":60}},{"start":{"line":362,"column":64},"end":{"line":362,"column":106}}]},"36":{"line":391,"type":"binary-expr","locations":[{"start":{"line":391,"column":23},"end":{"line":391,"column":43}},{"start":{"line":391,"column":47},"end":{"line":391,"column":48}}]},"37":{"line":428,"type":"if","locations":[{"start":{"line":428,"column":12},"end":{"line":428,"column":12}},{"start":{"line":428,"column":12},"end":{"line":428,"column":12}}]},"38":{"line":428,"type":"binary-expr","locations":[{"start":{"line":428,"column":15},"end":{"line":428,"column":41}},{"start":{"line":428,"column":45},"end":{"line":428,"column":71}}]},"39":{"line":440,"type":"if","locations":[{"start":{"line":440,"column":12},"end":{"line":440,"column":12}},{"start":{"line":440,"column":12},"end":{"line":440,"column":12}}]},"40":{"line":489,"type":"if","locations":[{"start":{"line":489,"column":12},"end":{"line":489,"column":12}},{"start":{"line":489,"column":12},"end":{"line":489,"column":12}}]},"41":{"line":502,"type":"if","locations":[{"start":{"line":502,"column":12},"end":{"line":502,"column":12}},{"start":{"line":502,"column":12},"end":{"line":502,"column":12}}]},"42":{"line":514,"type":"if","locations":[{"start":{"line":514,"column":16},"end":{"line":514,"column":16}},{"start":{"line":514,"column":16},"end":{"line":514,"column":16}}]},"43":{"line":579,"type":"if","locations":[{"start":{"line":579,"column":12},"end":{"line":579,"column":12}},{"start":{"line":579,"column":12},"end":{"line":579,"column":12}}]},"44":{"line":579,"type":"binary-expr","locations":[{"start":{"line":579,"column":16},"end":{"line":579,"column":36}},{"start":{"line":579,"column":40},"end":{"line":579,"column":60}}]},"45":{"line":584,"type":"if","locations":[{"start":{"line":584,"column":16},"end":{"line":584,"column":16}},{"start":{"line":584,"column":16},"end":{"line":584,"column":16}}]},"46":{"line":590,"type":"if","locations":[{"start":{"line":590,"column":16},"end":{"line":590,"column":16}},{"start":{"line":590,"column":16},"end":{"line":590,"column":16}}]},"47":{"line":630,"type":"if","locations":[{"start":{"line":630,"column":16},"end":{"line":630,"column":16}},{"start":{"line":630,"column":16},"end":{"line":630,"column":16}}]},"48":{"line":631,"type":"binary-expr","locations":[{"start":{"line":632,"column":25},"end":{"line":632,"column":76}},{"start":{"line":632,"column":80},"end":{"line":632,"column":130}},{"start":{"line":633,"column":25},"end":{"line":633,"column":76}},{"start":{"line":633,"column":80},"end":{"line":633,"column":130}},{"start":{"line":636,"column":24},"end":{"line":639,"column":48}}]},"49":{"line":662,"type":"if","locations":[{"start":{"line":662,"column":12},"end":{"line":662,"column":12}},{"start":{"line":662,"column":12},"end":{"line":662,"column":12}}]},"50":{"line":713,"type":"if","locations":[{"start":{"line":713,"column":16},"end":{"line":713,"column":16}},{"start":{"line":713,"column":16},"end":{"line":713,"column":16}}]},"51":{"line":713,"type":"binary-expr","locations":[{"start":{"line":713,"column":21},"end":{"line":713,"column":50}},{"start":{"line":713,"column":54},"end":{"line":713,"column":83}},{"start":{"line":714,"column":20},"end":{"line":714,"column":49}},{"start":{"line":714,"column":53},"end":{"line":714,"column":83}}]},"52":{"line":787,"type":"if","locations":[{"start":{"line":787,"column":12},"end":{"line":787,"column":12}},{"start":{"line":787,"column":12},"end":{"line":787,"column":12}}]},"53":{"line":788,"type":"if","locations":[{"start":{"line":788,"column":16},"end":{"line":788,"column":16}},{"start":{"line":788,"column":16},"end":{"line":788,"column":16}}]},"54":{"line":863,"type":"if","locations":[{"start":{"line":863,"column":12},"end":{"line":863,"column":12}},{"start":{"line":863,"column":12},"end":{"line":863,"column":12}}]},"55":{"line":871,"type":"switch","locations":[{"start":{"line":872,"column":16},"end":{"line":874,"column":26}},{"start":{"line":875,"column":16},"end":{"line":877,"column":26}},{"start":{"line":878,"column":16},"end":{"line":880,"column":26}},{"start":{"line":881,"column":16},"end":{"line":883,"column":26}},{"start":{"line":884,"column":16},"end":{"line":886,"column":26}},{"start":{"line":887,"column":16},"end":{"line":889,"column":26}},{"start":{"line":890,"column":16},"end":{"line":892,"column":26}},{"start":{"line":893,"column":16},"end":{"line":895,"column":26}},{"start":{"line":896,"column":16},"end":{"line":898,"column":26}},{"start":{"line":899,"column":16},"end":{"line":901,"column":26}},{"start":{"line":902,"column":16},"end":{"line":904,"column":26}},{"start":{"line":905,"column":16},"end":{"line":907,"column":26}},{"start":{"line":908,"column":16},"end":{"line":910,"column":26}},{"start":{"line":911,"column":16},"end":{"line":913,"column":26}},{"start":{"line":914,"column":16},"end":{"line":916,"column":26}},{"start":{"line":917,"column":16},"end":{"line":918,"column":57}}]},"56":{"line":1010,"type":"if","locations":[{"start":{"line":1010,"column":12},"end":{"line":1010,"column":12}},{"start":{"line":1010,"column":12},"end":{"line":1010,"column":12}}]},"57":{"line":1014,"type":"if","locations":[{"start":{"line":1014,"column":17},"end":{"line":1014,"column":17}},{"start":{"line":1014,"column":17},"end":{"line":1014,"column":17}}]},"58":{"line":1035,"type":"binary-expr","locations":[{"start":{"line":1035,"column":21},"end":{"line":1035,"column":27}},{"start":{"line":1035,"column":31},"end":{"line":1035,"column":32}}]},"59":{"line":1036,"type":"binary-expr","locations":[{"start":{"line":1036,"column":20},"end":{"line":1036,"column":25}},{"start":{"line":1036,"column":29},"end":{"line":1036,"column":30}}]},"60":{"line":1039,"type":"if","locations":[{"start":{"line":1039,"column":12},"end":{"line":1039,"column":12}},{"start":{"line":1039,"column":12},"end":{"line":1039,"column":12}}]},"61":{"line":1060,"type":"if","locations":[{"start":{"line":1060,"column":16},"end":{"line":1060,"column":16}},{"start":{"line":1060,"column":16},"end":{"line":1060,"column":16}}]},"62":{"line":1082,"type":"binary-expr","locations":[{"start":{"line":1082,"column":23},"end":{"line":1082,"column":30}},{"start":{"line":1082,"column":34},"end":{"line":1082,"column":46}},{"start":{"line":1082,"column":50},"end":{"line":1082,"column":54}}]},"63":{"line":1084,"type":"if","locations":[{"start":{"line":1084,"column":12},"end":{"line":1084,"column":12}},{"start":{"line":1084,"column":12},"end":{"line":1084,"column":12}}]},"64":{"line":1086,"type":"if","locations":[{"start":{"line":1086,"column":19},"end":{"line":1086,"column":19}},{"start":{"line":1086,"column":19},"end":{"line":1086,"column":19}}]},"65":{"line":1117,"type":"cond-expr","locations":[{"start":{"line":1117,"column":55},"end":{"line":1117,"column":66}},{"start":{"line":1117,"column":69},"end":{"line":1117,"column":83}}]},"66":{"line":1149,"type":"if","locations":[{"start":{"line":1149,"column":12},"end":{"line":1149,"column":12}},{"start":{"line":1149,"column":12},"end":{"line":1149,"column":12}}]},"67":{"line":1153,"type":"if","locations":[{"start":{"line":1153,"column":19},"end":{"line":1153,"column":19}},{"start":{"line":1153,"column":19},"end":{"line":1153,"column":19}}]},"68":{"line":1155,"type":"if","locations":[{"start":{"line":1155,"column":16},"end":{"line":1155,"column":16}},{"start":{"line":1155,"column":16},"end":{"line":1155,"column":16}}]},"69":{"line":1157,"type":"if","locations":[{"start":{"line":1157,"column":23},"end":{"line":1157,"column":23}},{"start":{"line":1157,"column":23},"end":{"line":1157,"column":23}}]},"70":{"line":1165,"type":"binary-expr","locations":[{"start":{"line":1165,"column":19},"end":{"line":1165,"column":23}},{"start":{"line":1165,"column":27},"end":{"line":1165,"column":30}}]},"71":{"line":1166,"type":"cond-expr","locations":[{"start":{"line":1166,"column":37},"end":{"line":1166,"column":38}},{"start":{"line":1166,"column":41},"end":{"line":1166,"column":46}}]},"72":{"line":1168,"type":"if","locations":[{"start":{"line":1168,"column":12},"end":{"line":1168,"column":12}},{"start":{"line":1168,"column":12},"end":{"line":1168,"column":12}}]},"73":{"line":1185,"type":"if","locations":[{"start":{"line":1185,"column":12},"end":{"line":1185,"column":12}},{"start":{"line":1185,"column":12},"end":{"line":1185,"column":12}}]},"74":{"line":1192,"type":"if","locations":[{"start":{"line":1192,"column":20},"end":{"line":1192,"column":20}},{"start":{"line":1192,"column":20},"end":{"line":1192,"column":20}}]},"75":{"line":1196,"type":"if","locations":[{"start":{"line":1196,"column":27},"end":{"line":1196,"column":27}},{"start":{"line":1196,"column":27},"end":{"line":1196,"column":27}}]},"76":{"line":1198,"type":"if","locations":[{"start":{"line":1198,"column":24},"end":{"line":1198,"column":24}},{"start":{"line":1198,"column":24},"end":{"line":1198,"column":24}}]},"77":{"line":1212,"type":"if","locations":[{"start":{"line":1212,"column":27},"end":{"line":1212,"column":27}},{"start":{"line":1212,"column":27},"end":{"line":1212,"column":27}}]},"78":{"line":1226,"type":"if","locations":[{"start":{"line":1226,"column":19},"end":{"line":1226,"column":19}},{"start":{"line":1226,"column":19},"end":{"line":1226,"column":19}}]},"79":{"line":1226,"type":"binary-expr","locations":[{"start":{"line":1226,"column":22},"end":{"line":1226,"column":47}},{"start":{"line":1226,"column":51},"end":{"line":1226,"column":71}}]},"80":{"line":1230,"type":"if","locations":[{"start":{"line":1230,"column":19},"end":{"line":1230,"column":19}},{"start":{"line":1230,"column":19},"end":{"line":1230,"column":19}}]},"81":{"line":1241,"type":"if","locations":[{"start":{"line":1241,"column":12},"end":{"line":1241,"column":12}},{"start":{"line":1241,"column":12},"end":{"line":1241,"column":12}}]},"82":{"line":1245,"type":"if","locations":[{"start":{"line":1245,"column":19},"end":{"line":1245,"column":19}},{"start":{"line":1245,"column":19},"end":{"line":1245,"column":19}}]},"83":{"line":1263,"type":"if","locations":[{"start":{"line":1263,"column":12},"end":{"line":1263,"column":12}},{"start":{"line":1263,"column":12},"end":{"line":1263,"column":12}}]},"84":{"line":1270,"type":"binary-expr","locations":[{"start":{"line":1270,"column":31},"end":{"line":1270,"column":37}},{"start":{"line":1270,"column":41},"end":{"line":1270,"column":42}}]},"85":{"line":1274,"type":"binary-expr","locations":[{"start":{"line":1274,"column":28},"end":{"line":1274,"column":34}},{"start":{"line":1274,"column":38},"end":{"line":1274,"column":39}}]},"86":{"line":1291,"type":"if","locations":[{"start":{"line":1291,"column":12},"end":{"line":1291,"column":12}},{"start":{"line":1291,"column":12},"end":{"line":1291,"column":12}}]},"87":{"line":1299,"type":"if","locations":[{"start":{"line":1299,"column":12},"end":{"line":1299,"column":12}},{"start":{"line":1299,"column":12},"end":{"line":1299,"column":12}}]},"88":{"line":1301,"type":"binary-expr","locations":[{"start":{"line":1301,"column":22},"end":{"line":1301,"column":46}},{"start":{"line":1301,"column":50},"end":{"line":1301,"column":51}}]},"89":{"line":1308,"type":"cond-expr","locations":[{"start":{"line":1308,"column":59},"end":{"line":1308,"column":75}},{"start":{"line":1308,"column":78},"end":{"line":1308,"column":93}}]},"90":{"line":1308,"type":"binary-expr","locations":[{"start":{"line":1308,"column":23},"end":{"line":1308,"column":37}},{"start":{"line":1308,"column":41},"end":{"line":1308,"column":55}}]},"91":{"line":1330,"type":"binary-expr","locations":[{"start":{"line":1330,"column":20},"end":{"line":1330,"column":45}},{"start":{"line":1330,"column":49},"end":{"line":1330,"column":75}}]},"92":{"line":1357,"type":"if","locations":[{"start":{"line":1357,"column":4},"end":{"line":1357,"column":4}},{"start":{"line":1357,"column":4},"end":{"line":1357,"column":4}}]},"93":{"line":1357,"type":"binary-expr","locations":[{"start":{"line":1357,"column":8},"end":{"line":1357,"column":37}},{"start":{"line":1357,"column":41},"end":{"line":1357,"column":78}}]},"94":{"line":1362,"type":"if","locations":[{"start":{"line":1362,"column":8},"end":{"line":1362,"column":8}},{"start":{"line":1362,"column":8},"end":{"line":1362,"column":8}}]},"95":{"line":1367,"type":"if","locations":[{"start":{"line":1367,"column":11},"end":{"line":1367,"column":11}},{"start":{"line":1367,"column":11},"end":{"line":1367,"column":11}}]},"96":{"line":1367,"type":"binary-expr","locations":[{"start":{"line":1367,"column":15},"end":{"line":1367,"column":43}},{"start":{"line":1367,"column":47},"end":{"line":1367,"column":57}}]}},"code":["/*! geolib 2.0.21 by Manuel Bieh","* Library to provide geo functions like distance calculation,","* conversion of decimal coordinates to sexagesimal and vice versa, etc.","* WGS 84 (World Geodetic System 1984)","* ","* @author Manuel Bieh","* @url http://www.manuelbieh.com/","* @version 2.0.21","* @license MIT ","**/;(function(global, undefined) {","","    \"use strict\";","","    function Geolib() {}","","    // Constants","    Geolib.TO_RAD = Math.PI / 180;","    Geolib.TO_DEG = 180 / Math.PI;","    Geolib.PI_X2 = Math.PI * 2;","    Geolib.PI_DIV4 = Math.PI / 4;","","    // Setting readonly defaults","    var geolib = Object.create(Geolib.prototype, {","        version: {","            value: \"2.0.21\"","        },","        radius: {","            value: 6378137","        },","        minLat: {","            value: -90","        },","        maxLat: {","            value: 90","        },","        minLon: {","            value: -180","        },","        maxLon: {","            value: 180","        },","        sexagesimalPattern: {","            value: /^([0-9]{1,3})°\\s*([0-9]{1,3}(?:\\.(?:[0-9]{1,2}))?)'\\s*(([0-9]{1,3}(\\.([0-9]{1,4}))?)\"\\s*)?([NEOSW]?)$/","        },","        measures: {","            value: Object.create(Object.prototype, {","                \"m\" : {value: 1},","                \"km\": {value: 0.001},","                \"cm\": {value: 100},","                \"mm\": {value: 1000},","                \"mi\": {value: (1 / 1609.344)},","                \"sm\": {value: (1 / 1852.216)},","                \"ft\": {value: (100 / 30.48)},","                \"in\": {value: (100 / 2.54)},","                \"yd\": {value: (1 / 0.9144)}","            })","        },","        prototype: {","            value: Geolib.prototype","        },","        extend: {","            value: function(methods, overwrite) {","                for(var prop in methods) {","                    if(typeof geolib.prototype[prop] === 'undefined' || overwrite === true) {","                        if(typeof methods[prop] === 'function' && typeof methods[prop].bind === 'function') {","                            geolib.prototype[prop] = methods[prop].bind(geolib);","                        } else {","                            geolib.prototype[prop] = methods[prop];","                        }","                    }","                }","            }","        }","    });","","    if (typeof(Number.prototype.toRad) === 'undefined') {","        Number.prototype.toRad = function() {","            return this * Geolib.TO_RAD;","        };","    }","","    if (typeof(Number.prototype.toDeg) === 'undefined') {","        Number.prototype.toDeg = function() {","            return this * Geolib.TO_DEG;","        };","    }","","    // Here comes the magic","    geolib.extend({","","        decimal: {},","","        sexagesimal: {},","","        distance: null,","","        getKeys: function(point) {","","            // GeoJSON Array [longitude, latitude(, elevation)]","            if(Object.prototype.toString.call(point) == '[object Array]') {","","                return {","                    longitude: point.length >= 1 ? 0 : undefined,","                    latitude: point.length >= 2 ? 1 : undefined,","                    elevation: point.length >= 3 ? 2 : undefined","                };","","            }","","            var getKey = function(possibleValues) {","","                var key;","","                possibleValues.every(function(val) {","                    // TODO: check if point is an object","                    if(typeof point != 'object') {","                        return true;","                    }","                    return point.hasOwnProperty(val) ? (function() { key = val; return false; }()) : true;","                });","","                return key;","","            };","","            var longitude = getKey(['lng', 'lon', 'longitude']);","            var latitude = getKey(['lat', 'latitude']);","            var elevation = getKey(['alt', 'altitude', 'elevation', 'elev']);","","            // return undefined if not at least one valid property was found","            if(typeof latitude == 'undefined' &&","                typeof longitude == 'undefined' &&","                typeof elevation == 'undefined') {","                return undefined;","            }","","            return {","                latitude: latitude,","                longitude: longitude,","                elevation: elevation","            };","","        },","","        // returns latitude of a given point, converted to decimal","        // set raw to true to avoid conversion","        getLat: function(point, raw) {","            return raw === true ? point[this.getKeys(point).latitude] : this.useDecimal(point[this.getKeys(point).latitude]);","        },","","        // Alias for getLat","        latitude: function(point) {","            return this.getLat.call(this, point);","        },","","        // returns longitude of a given point, converted to decimal","        // set raw to true to avoid conversion","        getLon: function(point, raw) {","            return raw === true ? point[this.getKeys(point).longitude] : this.useDecimal(point[this.getKeys(point).longitude]);","        },","","        // Alias for getLon","        longitude: function(point) {","            return this.getLon.call(this, point);","        },","","        getElev: function(point) {","            return point[this.getKeys(point).elevation];","        },","","        // Alias for getElev","        elevation: function(point) {","            return this.getElev.call(this, point);","        },","","        coords: function(point, raw) {","","            var retval = {","                latitude: raw === true ? point[this.getKeys(point).latitude] : this.useDecimal(point[this.getKeys(point).latitude]),","                longitude: raw === true ? point[this.getKeys(point).longitude] : this.useDecimal(point[this.getKeys(point).longitude])","            };","","            var elev = point[this.getKeys(point).elevation];","","            if(typeof elev !== 'undefined') {","                retval['elevation'] = elev;","            }","","            return retval;","","        },","","        // Alias for coords","        ll: function(point, raw) {","            return this.coords.call(this, point, raw);","        },","","","        // checks if a variable contains a valid latlong object","        validate: function(point) {","","            var keys = this.getKeys(point);","","            if(typeof keys === 'undefined' || typeof keys.latitude === 'undefined' || keys.longitude === 'undefined') {","                return false;","            }","","            var lat = point[keys.latitude];","            var lng = point[keys.longitude];","","            if(typeof lat === 'undefined' || !this.isDecimal(lat) && !this.isSexagesimal(lat)) {","                return false;","            }","","            if(typeof lng === 'undefined' || !this.isDecimal(lng) && !this.isSexagesimal(lng)) {","                return false;","            }","","            lat = this.useDecimal(lat);","            lng = this.useDecimal(lng);","","            if(lat < this.minLat || lat > this.maxLat || lng < this.minLon || lng > this.maxLon) {","                return false;","            }","","            return true;","","        },","","        /**","        * Calculates geodetic distance between two points specified by latitude/longitude using","        * Vincenty inverse formula for ellipsoids","        * Vincenty Inverse Solution of Geodesics on the Ellipsoid (c) Chris Veness 2002-2010","        * (Licensed under CC BY 3.0)","        *","        * @param    object    Start position {latitude: 123, longitude: 123}","        * @param    object    End position {latitude: 123, longitude: 123}","        * @param    integer   Accuracy (in meters)","        * @param    integer   Precision (in decimal cases)","        * @return   integer   Distance (in meters)","        */","        getDistance: function(start, end, accuracy, precision) {","","            accuracy = Math.floor(accuracy) || 1;","            precision = Math.floor(precision) || 0;","","            var s = this.coords(start);","            var e = this.coords(end);","","            var a = 6378137, b = 6356752.314245,  f = 1/298.257223563;  // WGS-84 ellipsoid params","            var L = (e['longitude']-s['longitude']).toRad();","","            var cosSigma, sigma, sinAlpha, cosSqAlpha, cos2SigmaM, sinSigma;","","            var U1 = Math.atan((1-f) * Math.tan(parseFloat(s['latitude']).toRad()));","            var U2 = Math.atan((1-f) * Math.tan(parseFloat(e['latitude']).toRad()));","            var sinU1 = Math.sin(U1), cosU1 = Math.cos(U1);","            var sinU2 = Math.sin(U2), cosU2 = Math.cos(U2);","","            var lambda = L, lambdaP, iterLimit = 100;","            do {","                var sinLambda = Math.sin(lambda), cosLambda = Math.cos(lambda);","                sinSigma = (","                    Math.sqrt(","                        (","                            cosU2 * sinLambda","                        ) * (","                            cosU2 * sinLambda","                        ) + (","                            cosU1 * sinU2 - sinU1 * cosU2 * cosLambda","                        ) * (","                            cosU1 * sinU2 - sinU1 * cosU2 * cosLambda","                        )","                    )","                );","                if (sinSigma === 0) {","                    return geolib.distance = 0;  // co-incident points","                }","","                cosSigma = sinU1 * sinU2 + cosU1 * cosU2 * cosLambda;","                sigma = Math.atan2(sinSigma, cosSigma);","                sinAlpha = cosU1 * cosU2 * sinLambda / sinSigma;","                cosSqAlpha = 1 - sinAlpha * sinAlpha;","                cos2SigmaM = cosSigma - 2 * sinU1 * sinU2 / cosSqAlpha;","","                if (isNaN(cos2SigmaM)) {","                    cos2SigmaM = 0;  // equatorial line: cosSqAlpha=0 (§6)","                }","                var C = (","                    f / 16 * cosSqAlpha * (","                        4 + f * (","                            4 - 3 * cosSqAlpha","                        )","                    )","                );","                lambdaP = lambda;","                lambda = (","                    L + (","                        1 - C","                    ) * f * sinAlpha * (","                        sigma + C * sinSigma * (","                            cos2SigmaM + C * cosSigma * (","                                -1 + 2 * cos2SigmaM * cos2SigmaM","                            )","                        )","                    )","                );","","            } while (Math.abs(lambda-lambdaP) > 1e-12 && --iterLimit>0);","","            if (iterLimit === 0) {","                return NaN;  // formula failed to converge","            }","","            var uSq = (","                cosSqAlpha * (","                    a * a - b * b","                ) / (","                    b*b","                )","            );","","            var A = (","                1 + uSq / 16384 * (","                    4096 + uSq * (","                        -768 + uSq * (","                            320 - 175 * uSq","                        )","                    )","                )","            );","","            var B = (","                uSq / 1024 * (","                    256 + uSq * (","                        -128 + uSq * (","                            74-47 * uSq","                        )","                    )","                )","            );","","            var deltaSigma = (","                B * sinSigma * (","                    cos2SigmaM + B / 4 * (","                        cosSigma * (","                            -1 + 2 * cos2SigmaM * cos2SigmaM","                        ) -B / 6 * cos2SigmaM * (","                            -3 + 4 * sinSigma * sinSigma","                        ) * (","                            -3 + 4 * cos2SigmaM * cos2SigmaM","                        )","                    )","                )","            );","","            var distance = b * A * (sigma - deltaSigma);","","            distance = distance.toFixed(precision); // round to 1mm precision","","            //if (start.hasOwnProperty(elevation) && end.hasOwnProperty(elevation)) {","            if (typeof this.elevation(start) !== 'undefined' && typeof this.elevation(end) !== 'undefined') {","                var climb = Math.abs(this.elevation(start) - this.elevation(end));","                distance = Math.sqrt(distance * distance + climb * climb);","            }","","            return this.distance = Math.round(distance * Math.pow(10, precision) / accuracy) * accuracy / Math.pow(10, precision);","","            /*","            // note: to return initial/final bearings in addition to distance, use something like:","            var fwdAz = Math.atan2(cosU2*sinLambda,  cosU1*sinU2-sinU1*cosU2*cosLambda);","            var revAz = Math.atan2(cosU1*sinLambda, -sinU1*cosU2+cosU1*sinU2*cosLambda);","","            return { distance: s, initialBearing: fwdAz.toDeg(), finalBearing: revAz.toDeg() };","            */","","        },","","","        /**","        * Calculates the distance between two spots.","        * This method is more simple but also far more inaccurate","        *","        * @param    object    Start position {latitude: 123, longitude: 123}","        * @param    object    End position {latitude: 123, longitude: 123}","        * @param    integer   Accuracy (in meters)","        * @return   integer   Distance (in meters)","        */","        getDistanceSimple: function(start, end, accuracy) {","","            accuracy = Math.floor(accuracy) || 1;","","            var distance =","                Math.round(","                    Math.acos(","                        Math.sin(","                            this.latitude(end).toRad()","                        ) *","                        Math.sin(","                            this.latitude(start).toRad()","                        ) +","                        Math.cos(","                            this.latitude(end).toRad()","                        ) *","                        Math.cos(","                            this.latitude(start).toRad()","                        ) *","                        Math.cos(","                            this.longitude(start).toRad() - this.longitude(end).toRad()","                        )","                    ) * this.radius","                );","","            return geolib.distance = Math.floor(Math.round(distance/accuracy)*accuracy);","","        },","","","    /**","        * Calculates the center of a collection of geo coordinates","        *","        * @param        array       Collection of coords [{latitude: 51.510, longitude: 7.1321}, {latitude: 49.1238, longitude: \"8° 30' W\"}, ...]","        * @return       object      {latitude: centerLat, longitude: centerLng}","        */","        getCenter: function(coords) {","","            var coordsArray = coords;","            if(typeof coords === 'object' && !(coords instanceof Array)) {","","                coordsArray = [];","","                for(var key in coords) {","                    coordsArray.push(","                        this.coords(coords[key])","                    );","                }","","            }","","            if(!coordsArray.length) {","                return false;","            }","","            var X = 0.0;","            var Y = 0.0;","            var Z = 0.0;","            var lat, lon, hyp;","","            coordsArray.forEach(function(coord) {","","                lat = this.latitude(coord).toRad();","                lon = this.longitude(coord).toRad();","","                X += Math.cos(lat) * Math.cos(lon);","                Y += Math.cos(lat) * Math.sin(lon);","                Z += Math.sin(lat);","","            }, this);","","            var nb_coords = coordsArray.length;","            X = X / nb_coords;","            Y = Y / nb_coords;","            Z = Z / nb_coords;","","            lon = Math.atan2(Y, X);","            hyp = Math.sqrt(X * X + Y * Y);","            lat = Math.atan2(Z, hyp);","","            return {","                latitude: (lat * Geolib.TO_DEG).toFixed(6),","                longitude: (lon * Geolib.TO_DEG).toFixed(6)","            };","","        },","","","        /**","        * Gets the max and min, latitude, longitude, and elevation (if provided).","        * @param        array       array with coords e.g. [{latitude: 51.5143, longitude: 7.4138}, {latitude: 123, longitude: 123}, ...]","        * @return   object      {maxLat: maxLat,","        *                     minLat: minLat","        *                     maxLng: maxLng,","        *                     minLng: minLng,","        *                     maxElev: maxElev,","        *                     minElev: minElev}","        */","        getBounds: function(coords) {","","            if (!coords.length) {","                return false;","            }","","            var useElevation = this.elevation(coords[0]);","","            var stats = {","                maxLat: -Infinity,","                minLat: Infinity,","                maxLng: -Infinity,","                minLng: Infinity","            };","","            if (typeof useElevation != 'undefined') {","                stats.maxElev = 0;","                stats.minElev = Infinity;","            }","","            for (var i = 0, l = coords.length; i < l; ++i) {","","                stats.maxLat = Math.max(this.latitude(coords[i]), stats.maxLat);","                stats.minLat = Math.min(this.latitude(coords[i]), stats.minLat);","                stats.maxLng = Math.max(this.longitude(coords[i]), stats.maxLng);","                stats.minLng = Math.min(this.longitude(coords[i]), stats.minLng);","","                if (useElevation) {","                    stats.maxElev = Math.max(this.elevation(coords[i]), stats.maxElev);","                    stats.minElev = Math.min(this.elevation(coords[i]), stats.minElev);","                }","","            }","","            return stats;","","        },","","        /**","        * Calculates the center of the bounds of geo coordinates.","        *","        * On polygons like political borders (eg. states)","        * this may gives a closer result to human expectation, than `getCenter`,","        * because that function can be disturbed by uneven distribution of","        * point in different sides.","        * Imagine the US state Oklahoma: `getCenter` on that gives a southern","        * point, because the southern border contains a lot more nodes,","        * than the others.","        *","        * @param        array       Collection of coords [{latitude: 51.510, longitude: 7.1321}, {latitude: 49.1238, longitude: \"8° 30' W\"}, ...]","        * @return       object      {latitude: centerLat, longitude: centerLng}","        */","        getCenterOfBounds: function(coords) {","            var b = this.getBounds(coords);","            var latitude = b.minLat + ((b.maxLat - b.minLat) / 2);","            var longitude = b.minLng + ((b.maxLng - b.minLng) / 2);","            return {","                latitude: parseFloat(latitude.toFixed(6)),","                longitude: parseFloat(longitude.toFixed(6))","            };","        },","","","        /**","        * Computes the bounding coordinates of all points on the surface","        * of the earth less than or equal to the specified great circle","        * distance.","        *","        * @param object Point position {latitude: 123, longitude: 123}","        * @param number Distance (in meters).","        * @return array Collection of two points defining the SW and NE corners.","        */","        getBoundsOfDistance: function(point, distance) {","","            var latitude = this.latitude(point);","            var longitude = this.longitude(point);","","            var radLat = latitude.toRad();","            var radLon = longitude.toRad();","","            var radDist = distance / this.radius;","            var minLat = radLat - radDist;","            var maxLat = radLat + radDist;","","            var MAX_LAT_RAD = this.maxLat.toRad();","            var MIN_LAT_RAD = this.minLat.toRad();","            var MAX_LON_RAD = this.maxLon.toRad();","            var MIN_LON_RAD = this.minLon.toRad();","","            var minLon;","            var maxLon;","","            if (minLat > MIN_LAT_RAD && maxLat < MAX_LAT_RAD) {","","                var deltaLon = Math.asin(Math.sin(radDist) / Math.cos(radLat));","                minLon = radLon - deltaLon;","","                if (minLon < MIN_LON_RAD) {","                    minLon += Geolib.PI_X2;","                }","","                maxLon = radLon + deltaLon;","","                if (maxLon > MAX_LON_RAD) {","                    maxLon -= Geolib.PI_X2;","                }","","            } else {","                // A pole is within the distance.","                minLat = Math.max(minLat, MIN_LAT_RAD);","                maxLat = Math.min(maxLat, MAX_LAT_RAD);","                minLon = MIN_LON_RAD;","                maxLon = MAX_LON_RAD;","            }","","            return [","                // Southwest","                {","                    latitude: minLat.toDeg(),","                    longitude: minLon.toDeg()","                },","                // Northeast","                {","                    latitude: maxLat.toDeg(),","                    longitude: maxLon.toDeg()","                }","            ];","","        },","","","        /**","        * Checks whether a point is inside of a polygon or not.","        * Note that the polygon coords must be in correct order!","        *","        * @param        object      coordinate to check e.g. {latitude: 51.5023, longitude: 7.3815}","        * @param        array       array with coords e.g. [{latitude: 51.5143, longitude: 7.4138}, {latitude: 123, longitude: 123}, ...]","        * @return       bool        true if the coordinate is inside the given polygon","        */","        isPointInside: function(latlng, coords) {","","            for(var c = false, i = -1, l = coords.length, j = l - 1; ++i < l; j = i) {","","                if(","                    (","                        (this.longitude(coords[i]) <= this.longitude(latlng) && this.longitude(latlng) < this.longitude(coords[j])) ||","                        (this.longitude(coords[j]) <= this.longitude(latlng) && this.longitude(latlng) < this.longitude(coords[i]))","                    ) &&","                    (","                        this.latitude(latlng) < (this.latitude(coords[j]) - this.latitude(coords[i])) *","                        (this.longitude(latlng) - this.longitude(coords[i])) /","                        (this.longitude(coords[j]) - this.longitude(coords[i])) +","                        this.latitude(coords[i])","                    )","                ) {","                    c = !c;","                }","","            }","","            return c;","","        },","","","       /**","        * Pre calculate the polygon coords, to speed up the point inside check.","        * Use this function before calling isPointInsideWithPreparedPolygon()","        * @see          Algorythm from http://alienryderflex.com/polygon/","        * @param        array       array with coords e.g. [{latitude: 51.5143, longitude: 7.4138}, {latitude: 123, longitude: 123}, ...]","        */","        preparePolygonForIsPointInsideOptimized: function(coords) {","","            for(var i = 0, j = coords.length-1; i < coords.length; i++) {","","            if(this.longitude(coords[j]) === this.longitude(coords[i])) {","","                    coords[i].constant = this.latitude(coords[i]);","                    coords[i].multiple = 0;","","                } else {","","                    coords[i].constant = this.latitude(coords[i]) - (","                        this.longitude(coords[i]) * this.latitude(coords[j])","                    ) / (","                        this.longitude(coords[j]) - this.longitude(coords[i])","                    ) + (","                        this.longitude(coords[i])*this.latitude(coords[i])","                    ) / (","                        this.longitude(coords[j])-this.longitude(coords[i])","                    );","","                    coords[i].multiple = (","                        this.latitude(coords[j])-this.latitude(coords[i])","                    ) / (","                        this.longitude(coords[j])-this.longitude(coords[i])","                    );","","                }","","                j=i;","","            }","","        },","","      /**","       * Checks whether a point is inside of a polygon or not.","       * \"This is useful if you have many points that need to be tested against the same (static) polygon.\"","       * Please call the function preparePolygonForIsPointInsideOptimized() with the same coords object before using this function.","       * Note that the polygon coords must be in correct order!","       *","       * @see          Algorythm from http://alienryderflex.com/polygon/","       *","       * @param     object      coordinate to check e.g. {latitude: 51.5023, longitude: 7.3815}","       * @param     array       array with coords e.g. [{latitude: 51.5143, longitude: 7.4138}, {latitude: 123, longitude: 123}, ...]","       * @return        bool        true if the coordinate is inside the given polygon","       */","        isPointInsideWithPreparedPolygon: function(point, coords) {","","            var flgPointInside = false,","            y = this.longitude(point),","            x = this.latitude(point);","","            for(var i = 0, j = coords.length-1; i < coords.length; i++) {","","                if ((this.longitude(coords[i]) < y && this.longitude(coords[j]) >=y ||","                    this.longitude(coords[j]) < y && this.longitude(coords[i]) >= y)) {","","                    flgPointInside^=(y*coords[i].multiple+coords[i].constant < x);","","                }","","                j=i;","","            }","","            return flgPointInside;","","        },","","","        /**","        * Shortcut for geolib.isPointInside()","        */","        isInside: function() {","            return this.isPointInside.apply(this, arguments);","        },","","","        /**","        * Checks whether a point is inside of a circle or not.","        *","        * @param        object      coordinate to check (e.g. {latitude: 51.5023, longitude: 7.3815})","        * @param        object      coordinate of the circle's center (e.g. {latitude: 51.4812, longitude: 7.4025})","        * @param        integer     maximum radius in meters","        * @return       bool        true if the coordinate is within the given radius","        */","        isPointInCircle: function(latlng, center, radius) {","            return this.getDistance(latlng, center) < radius;","        },","","","        /**","        * Shortcut for geolib.isPointInCircle()","        */","        withinRadius: function() {","            return this.isPointInCircle.apply(this, arguments);","        },","","","        /**","        * Gets rhumb line bearing of two points. Find out about the difference between rhumb line and","        * great circle bearing on Wikipedia. It's quite complicated. Rhumb line should be fine in most cases:","        *","        * http://en.wikipedia.org/wiki/Rhumb_line#General_and_mathematical_description","        *","        * Function heavily based on Doug Vanderweide's great PHP version (licensed under GPL 3.0)","        * http://www.dougv.com/2009/07/13/calculating-the-bearing-and-compass-rose-direction-between-two-latitude-longitude-coordinates-in-php/","        *","        * @param        object      origin coordinate (e.g. {latitude: 51.5023, longitude: 7.3815})","        * @param        object      destination coordinate","        * @return       integer     calculated bearing","        */","        getRhumbLineBearing: function(originLL, destLL) {","","            // difference of longitude coords","            var diffLon = this.longitude(destLL).toRad() - this.longitude(originLL).toRad();","","            // difference latitude coords phi","            var diffPhi = Math.log(","                Math.tan(","                    this.latitude(destLL).toRad() / 2 + Geolib.PI_DIV4","                ) /","                Math.tan(","                    this.latitude(originLL).toRad() / 2 + Geolib.PI_DIV4","                )","            );","","            // recalculate diffLon if it is greater than pi","            if(Math.abs(diffLon) > Math.PI) {","                if(diffLon > 0) {","                    diffLon = (Geolib.PI_X2 - diffLon) * -1;","                }","                else {","                    diffLon = Geolib.PI_X2 + diffLon;","                }","            }","","            //return the angle, normalized","            return (Math.atan2(diffLon, diffPhi).toDeg() + 360) % 360;","","        },","","","        /**","        * Gets great circle bearing of two points. See description of getRhumbLineBearing for more information","        *","        * @param        object      origin coordinate (e.g. {latitude: 51.5023, longitude: 7.3815})","        * @param        object      destination coordinate","        * @return       integer     calculated bearing","        */","        getBearing: function(originLL, destLL) {","","            destLL['latitude'] = this.latitude(destLL);","            destLL['longitude'] = this.longitude(destLL);","            originLL['latitude'] = this.latitude(originLL);","            originLL['longitude'] = this.longitude(originLL);","","            var bearing = (","                (","                    Math.atan2(","                        Math.sin(","                            destLL['longitude'].toRad() -","                            originLL['longitude'].toRad()","                        ) *","                        Math.cos(","                            destLL['latitude'].toRad()","                        ),","                        Math.cos(","                            originLL['latitude'].toRad()","                        ) *","                        Math.sin(","                            destLL['latitude'].toRad()","                        ) -","                        Math.sin(","                            originLL['latitude'].toRad()","                        ) *","                        Math.cos(","                            destLL['latitude'].toRad()","                        ) *","                        Math.cos(","                            destLL['longitude'].toRad() - originLL['longitude'].toRad()","                        )","                    )","                ).toDeg() + 360","            ) % 360;","","            return bearing;","","        },","","","        /**","        * Gets the compass direction from an origin coordinate to a destination coordinate.","        *","        * @param        object      origin coordinate (e.g. {latitude: 51.5023, longitude: 7.3815})","        * @param        object      destination coordinate","        * @param        string      Bearing mode. Can be either circle or rhumbline","        * @return       object      Returns an object with a rough (NESW) and an exact direction (NNE, NE, ENE, E, ESE, etc).","        */","        getCompassDirection: function(originLL, destLL, bearingMode) {","","            var direction;","            var bearing;","","            if(bearingMode == 'circle') {","                // use great circle bearing","                bearing = this.getBearing(originLL, destLL);","            } else {","                // default is rhumb line bearing","                bearing = this.getRhumbLineBearing(originLL, destLL);","            }","","            switch(Math.round(bearing/22.5)) {","                case 1:","                    direction = {exact: \"NNE\", rough: \"N\"};","                    break;","                case 2:","                    direction = {exact: \"NE\", rough: \"N\"};","                    break;","                case 3:","                    direction = {exact: \"ENE\", rough: \"E\"};","                    break;","                case 4:","                    direction = {exact: \"E\", rough: \"E\"};","                    break;","                case 5:","                    direction = {exact: \"ESE\", rough: \"E\"};","                    break;","                case 6:","                    direction = {exact: \"SE\", rough: \"E\"};","                    break;","                case 7:","                    direction = {exact: \"SSE\", rough: \"S\"};","                    break;","                case 8:","                    direction = {exact: \"S\", rough: \"S\"};","                    break;","                case 9:","                    direction = {exact: \"SSW\", rough: \"S\"};","                    break;","                case 10:","                    direction = {exact: \"SW\", rough: \"S\"};","                    break;","                case 11:","                    direction = {exact: \"WSW\", rough: \"W\"};","                    break;","                case 12:","                    direction = {exact: \"W\", rough: \"W\"};","                    break;","                case 13:","                    direction = {exact: \"WNW\", rough: \"W\"};","                    break;","                case 14:","                    direction = {exact: \"NW\", rough: \"W\"};","                    break;","                case 15:","                    direction = {exact: \"NNW\", rough: \"N\"};","                    break;","                default:","                    direction = {exact: \"N\", rough: \"N\"};","            }","","            direction['bearing'] = bearing;","            return direction;","","        },","","","        /**","        * Shortcut for getCompassDirection","        */","        getDirection: function(originLL, destLL, bearingMode) {","            return this.getCompassDirection.apply(this, arguments);","        },","","","        /**","        * Sorts an array of coords by distance from a reference coordinate","        *","        * @param        object      reference coordinate e.g. {latitude: 51.5023, longitude: 7.3815}","        * @param        mixed       array or object with coords [{latitude: 51.5143, longitude: 7.4138}, {latitude: 123, longitude: 123}, ...]","        * @return       array       ordered array","        */","        orderByDistance: function(latlng, coords) {","","            var coordsArray = [];","","            for(var coord in coords) {","","                var distance = this.getDistance(latlng, coords[coord]);","                var augmentedCoord = Object.create(coords[coord]);","                augmentedCoord.distance = distance;","                augmentedCoord.key = coord;","","                coordsArray.push(augmentedCoord);","","            }","","            return coordsArray.sort(function(a, b) {","                return a.distance - b.distance;","            });","","        },","","        /**","        * Check if a point lies in line created by two other points","        *","        * @param    object    Point to check: {latitude: 123, longitude: 123}","        * @param    object    Start of line {latitude: 123, longitude: 123}","        * @param    object    End of line {latitude: 123, longitude: 123}","        * @return   boolean","        */","        isPointInLine: function(point, start, end) {","","            return (this.getDistance(start, point, 1, 3)+this.getDistance(point, end, 1, 3)).toFixed(3)==this.getDistance(start, end, 1, 3);","        },","","                /**","        * Check if a point lies within a given distance from a line created by two other points","        *","        * @param    object    Point to check: {latitude: 123, longitude: 123}","        * @param    object    Start of line {latitude: 123, longitude: 123}","        * @param    object    End of line {latitude: 123, longitude: 123}","        * @pararm   float     maximum distance from line","        * @return   boolean","        */","        isPointNearLine: function(point, start, end, distance) {","            return this.getDistanceFromLine(point, start, end) < distance;","        },","","                     /**","        * return the minimum distance from a point to a line","        *","        * @param    object    Point away from line","        * @param    object    Start of line {latitude: 123, longitude: 123}","        * @param    object    End of line {latitude: 123, longitude: 123}","        * @return   float     distance from point to line","        */","        getDistanceFromLine: function(point, start, end) {","            var d1 = this.getDistance(start, point, 1, 3);","            var d2 = this.getDistance(point, end, 1, 3);","            var d3 = this.getDistance(start, end, 1, 3);","            var distance = 0;","","            // alpha is the angle between the line from start to point, and from start to end //","            var alpha = Math.acos((d1*d1 + d3*d3 - d2*d2)/(2*d1*d3));","            // beta is the angle between the line from end to point and from end to start //","            var beta = Math.acos((d2*d2 + d3*d3 - d1*d1)/(2*d2*d3));","","            // if the angle is greater than 90 degrees, then the minimum distance is the","            // line from the start to the point //","            if(alpha>Math.PI/2) {","                distance = d1;","            }","            // same for the beta //","            else if(beta > Math.PI/2) {","                distance = d2;","            }","            // otherwise the minimum distance is achieved through a line perpendular to the start-end line,","            // which goes from the start-end line to the point //","            else {","                distance = Math.sin(alpha) * d1;","            }","","            return distance;","        },","","        /**","        * Finds the nearest coordinate to a reference coordinate","        *","        * @param        object      reference coordinate e.g. {latitude: 51.5023, longitude: 7.3815}","        * @param        mixed       array or object with coords [{latitude: 51.5143, longitude: 7.4138}, {latitude: 123, longitude: 123}, ...]","        * @return       array       ordered array","        */","        findNearest: function(latlng, coords, offset, limit) {","","            offset = offset || 0;","            limit = limit || 1;","            var ordered = this.orderByDistance(latlng, coords);","","            if(limit === 1) {","                return ordered[offset];","            } else {","                return ordered.splice(offset, limit);","            }","","        },","","","        /**","        * Calculates the length of a given path","        *","        * @param        mixed       array or object with coords [{latitude: 51.5143, longitude: 7.4138}, {latitude: 123, longitude: 123}, ...]","        * @return       integer     length of the path (in meters)","        */","        getPathLength: function(coords) {","","            var dist = 0;","            var last;","","            for (var i = 0, l = coords.length; i < l; ++i) {","                if(last) {","                    //console.log(coords[i], last, this.getDistance(coords[i], last));","                    dist += this.getDistance(this.coords(coords[i]), last);","                }","                last = this.coords(coords[i]);","            }","","            return dist;","","        },","","","        /**","        * Calculates the speed between to points within a given time span.","        *","        * @param        object      coords with javascript timestamp {latitude: 51.5143, longitude: 7.4138, time: 1360231200880}","        * @param        object      coords with javascript timestamp {latitude: 51.5502, longitude: 7.4323, time: 1360245600460}","        * @param        object      options (currently \"unit\" is the only option. Default: km(h));","        * @return       float       speed in unit per hour","        */","        getSpeed: function(start, end, options) {","","            var unit = options && options.unit || 'km';","","            if(unit == 'mph') {","                unit = 'mi';","            } else if(unit == 'kmh') {","                unit = 'km';","            }","","            var distance = geolib.getDistance(start, end);","            var time = ((end.time*1)/1000) - ((start.time*1)/1000);","            var mPerHr = (distance/time)*3600;","            var speed = Math.round(mPerHr * this.measures[unit] * 10000)/10000;","            return speed;","","        },","","","        /**","         * Computes the destination point given an initial point, a distance","         * and a bearing","         *","         * see http://www.movable-type.co.uk/scripts/latlong.html for the original code","         *","         * @param        object     start coordinate (e.g. {latitude: 51.5023, longitude: 7.3815})","         * @param        float      longitude of the inital point in degree","         * @param        float      distance to go from the inital point in meter","         * @param        float      bearing in degree of the direction to go, e.g. 0 = north, 180 = south","         * @param        float      optional (in meter), defaults to mean radius of the earth","         * @return       object     {latitude: destLat (in degree), longitude: destLng (in degree)}","         */","        computeDestinationPoint: function(start, distance, bearing, radius) {","","            var lat = this.latitude(start);","            var lng = this.longitude(start);","","            radius = (typeof radius === 'undefined') ? this.radius : Number(radius);","","            var δ = Number(distance) / radius; // angular distance in radians","            var θ = Number(bearing).toRad();","","            var φ1 = Number(lat).toRad();","            var λ1 = Number(lng).toRad();","","            var φ2 = Math.asin( Math.sin(φ1)*Math.cos(δ) +","                Math.cos(φ1)*Math.sin(δ)*Math.cos(θ) );","            var λ2 = λ1 + Math.atan2(Math.sin(θ)*Math.sin(δ)*Math.cos(φ1),","                    Math.cos(δ)-Math.sin(φ1)*Math.sin(φ2));","            λ2 = (λ2+3*Math.PI) % (2*Math.PI) - Math.PI; // normalise to -180..+180°","","            return {","                latitude: φ2.toDeg(),","                longitude: λ2.toDeg()","            };","","        },","","","        /**","        * Converts a distance from meters to km, mm, cm, mi, ft, in or yd","        *","        * @param        string      Format to be converted in","        * @param        float       Distance in meters","        * @param        float       Decimal places for rounding (default: 4)","        * @return       float       Converted distance","        */","        convertUnit: function(unit, distance, round) {","","            if(distance === 0) {","","                return 0;","","            } else if(typeof distance === 'undefined') {","","                if(this.distance === null) {","                    throw new Error('No distance was given');","                } else if(this.distance === 0) {","                    return 0;","                } else {","                    distance = this.distance;","                }","","            }","","            unit = unit || 'm';","            round = (null == round ? 4 : round);","","            if(typeof this.measures[unit] !== 'undefined') {","                return this.round(distance * this.measures[unit], round);","            } else {","                throw new Error('Unknown unit for conversion.');","            }","","        },","","","        /**","        * Checks if a value is in decimal format or, if neccessary, converts to decimal","        *","        * @param        mixed       Value(s) to be checked/converted (array of latlng objects, latlng object, sexagesimal string, float)","        * @return       float       Input data in decimal format","        */","        useDecimal: function(value) {","","            if(Object.prototype.toString.call(value) === '[object Array]') {","","                var geolib = this;","","                value = value.map(function(val) {","","                    //if(!isNaN(parseFloat(val))) {","                    if(geolib.isDecimal(val)) {","","                        return geolib.useDecimal(val);","","                    } else if(typeof val == 'object') {","","                        if(geolib.validate(val)) {","","                            return geolib.coords(val);","","                        } else {","","                            for(var prop in val) {","                                val[prop] = geolib.useDecimal(val[prop]);","                            }","","                            return val;","","                        }","","                    } else if(geolib.isSexagesimal(val)) {","","                        return geolib.sexagesimal2decimal(val);","","                    } else {","","                        return val;","","                    }","","                });","","                return value;","","            } else if(typeof value === 'object' && this.validate(value)) {","","                return this.coords(value);","","            } else if(typeof value === 'object') {","","                for(var prop in value) {","                    value[prop] = this.useDecimal(value[prop]);","                }","","                return value;","","            }","","","            if (this.isDecimal(value)) {","","                return parseFloat(value);","","            } else if(this.isSexagesimal(value) === true) {","","                return parseFloat(this.sexagesimal2decimal(value));","","            }","","            throw new Error('Unknown format.');","","        },","","        /**","        * Converts a decimal coordinate value to sexagesimal format","        *","        * @param        float       decimal","        * @return       string      Sexagesimal value (XX° YY' ZZ\")","        */","        decimal2sexagesimal: function(dec) {","","            if (dec in this.sexagesimal) {","                return this.sexagesimal[dec];","            }","","            var tmp = dec.toString().split('.');","","            var deg = Math.abs(tmp[0]);","            var min = ('0.' + (tmp[1] || 0))*60;","            var sec = min.toString().split('.');","","            min = Math.floor(min);","            sec = (('0.' + (sec[1] || 0)) * 60).toFixed(2);","","            this.sexagesimal[dec] = (deg + '° ' + min + \"' \" + sec + '\"');","","            return this.sexagesimal[dec];","","        },","","","        /**","        * Converts a sexagesimal coordinate to decimal format","        *","        * @param        float       Sexagesimal coordinate","        * @return       string      Decimal value (XX.XXXXXXXX)","        */","        sexagesimal2decimal: function(sexagesimal) {","","            if (sexagesimal in this.decimal) {","                return this.decimal[sexagesimal];","            }","","            var regEx = new RegExp(this.sexagesimalPattern);","            var data = regEx.exec(sexagesimal);","            var min = 0, sec = 0;","","            if(data) {","                min = parseFloat(data[2]/60);","                sec = parseFloat(data[4]/3600) || 0;","            }","","            var dec = ((parseFloat(data[1]) + min + sec)).toFixed(8);","            //var   dec = ((parseFloat(data[1]) + min + sec));","","                // South and West are negative decimals","                dec = (data[7] == 'S' || data[7] == 'W') ? parseFloat(-dec) : parseFloat(dec);","                //dec = (data[7] == 'S' || data[7] == 'W') ? -dec : dec;","","            this.decimal[sexagesimal] = dec;","","            return dec;","","        },","","","        /**","        * Checks if a value is in decimal format","        *","        * @param        string      Value to be checked","        * @return       bool        True if in sexagesimal format","        */","        isDecimal: function(value) {","","            value = value.toString().replace(/\\s*/, '');","","            // looks silly but works as expected","            // checks if value is in decimal format","            return (!isNaN(parseFloat(value)) && parseFloat(value) == value);","","        },","","","        /**","        * Checks if a value is in sexagesimal format","        *","        * @param        string      Value to be checked","        * @return       bool        True if in sexagesimal format","        */","        isSexagesimal: function(value) {","","            value = value.toString().replace(/\\s*/, '');","","            return this.sexagesimalPattern.test(value);","","        },","","        round: function(value, n) {","            var decPlace = Math.pow(10, n);","            return Math.round(value * decPlace)/decPlace;","        }","","    });","","    // Node module","    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {","","        module.exports = geolib;","","        // react native","        if (typeof global === 'object') {","          global.geolib = geolib;","        }","","    // AMD module","    } else if (typeof define === \"function\" && define.amd) {","","        define(\"geolib\", [], function () {","            return geolib;","        });","","    // we're in a browser","    } else {","","        global.geolib = geolib;","","    }","","}(this));",""],"l":{"10":1,"14":1,"17":1,"18":1,"19":1,"20":1,"23":1,"63":1,"64":44,"65":44,"66":41,"68":3,"76":1,"77":1,"78":0,"82":1,"83":1,"84":0,"89":1,"100":0,"102":0,"110":0,"112":0,"114":0,"116":0,"117":0,"119":0,"122":0,"126":0,"127":0,"128":0,"131":0,"134":0,"137":0,"148":0,"153":0,"159":0,"164":0,"168":0,"173":0,"178":0,"183":0,"185":0,"186":0,"189":0,"195":0,"202":0,"204":0,"205":0,"208":0,"209":0,"211":0,"212":0,"215":0,"216":0,"219":0,"220":0,"222":0,"223":0,"226":0,"244":0,"245":0,"247":0,"248":0,"250":0,"251":0,"253":0,"255":0,"256":0,"257":0,"258":0,"260":0,"261":0,"262":0,"263":0,"276":0,"277":0,"280":0,"281":0,"282":0,"283":0,"284":0,"286":0,"287":0,"289":0,"296":0,"297":0,"311":0,"312":0,"315":0,"323":0,"333":0,"343":0,"357":0,"359":0,"362":0,"363":0,"364":0,"367":0,"391":0,"393":0,"414":0,"427":0,"428":0,"430":0,"432":0,"433":0,"440":0,"441":0,"444":0,"445":0,"446":0,"447":0,"449":0,"451":0,"452":0,"454":0,"455":0,"456":0,"460":0,"461":0,"462":0,"463":0,"465":0,"466":0,"467":0,"469":0,"489":0,"490":0,"493":0,"495":0,"502":0,"503":0,"504":0,"507":0,"509":0,"510":0,"511":0,"512":0,"514":0,"515":0,"516":0,"521":0,"540":0,"541":0,"542":0,"543":0,"561":0,"562":0,"564":0,"565":0,"567":0,"568":0,"569":0,"571":0,"572":0,"573":0,"574":0,"576":0,"577":0,"579":0,"581":0,"582":0,"584":0,"585":0,"588":0,"590":0,"591":0,"596":0,"597":0,"598":0,"599":0,"602":0,"628":0,"630":0,"642":0,"647":0,"660":0,"662":0,"664":0,"665":0,"669":0,"679":0,"687":0,"707":0,"711":0,"713":0,"716":0,"720":0,"724":0,"733":0,"746":0,"754":0,"774":0,"777":0,"787":0,"788":0,"789":0,"792":0,"797":0,"811":0,"812":0,"813":0,"814":0,"816":0,"845":0,"860":0,"861":0,"863":0,"865":0,"868":0,"871":0,"873":0,"874":0,"876":0,"877":0,"879":0,"880":0,"882":0,"883":0,"885":0,"886":0,"888":0,"889":0,"891":0,"892":0,"894":0,"895":0,"897":0,"898":0,"900":0,"901":0,"903":0,"904":0,"906":0,"907":0,"909":0,"910":0,"912":0,"913":0,"915":0,"916":0,"918":0,"921":0,"922":0,"931":0,"944":0,"946":0,"948":0,"949":0,"950":0,"951":0,"953":0,"957":0,"958":0,"973":0,"986":0,"998":0,"999":0,"1000":0,"1001":0,"1004":0,"1006":0,"1010":0,"1011":0,"1014":0,"1015":0,"1020":0,"1023":0,"1035":0,"1036":0,"1037":0,"1039":0,"1040":0,"1042":0,"1056":0,"1057":0,"1059":0,"1060":0,"1062":0,"1064":0,"1067":0,"1082":0,"1084":0,"1085":0,"1086":0,"1087":0,"1090":0,"1091":0,"1092":0,"1093":0,"1094":0,"1114":0,"1115":0,"1117":0,"1119":0,"1120":0,"1122":0,"1123":0,"1125":0,"1127":0,"1129":0,"1131":0,"1149":0,"1151":0,"1153":0,"1155":0,"1156":0,"1157":0,"1158":0,"1160":0,"1165":0,"1166":0,"1168":0,"1169":0,"1171":0,"1185":0,"1187":0,"1189":0,"1192":0,"1194":0,"1196":0,"1198":0,"1200":0,"1204":0,"1205":0,"1208":0,"1212":0,"1214":0,"1218":0,"1224":0,"1226":0,"1228":0,"1230":0,"1232":0,"1233":0,"1236":0,"1241":0,"1243":0,"1245":0,"1247":0,"1251":0,"1263":0,"1264":0,"1267":0,"1269":0,"1270":0,"1271":0,"1273":0,"1274":0,"1276":0,"1278":0,"1291":0,"1292":0,"1295":0,"1296":0,"1297":0,"1299":0,"1300":0,"1301":0,"1304":0,"1308":0,"1311":0,"1313":0,"1326":0,"1330":0,"1343":0,"1345":0,"1350":0,"1351":0,"1357":1,"1359":1,"1362":1,"1363":1,"1367":0,"1369":0,"1370":0,"1376":0}}}